{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useRef, useState } from \"react\";\nimport dynamic from \"next/dynamic\";\nimport { parseMermaidToExcalidraw } from \"@excalidraw/mermaid-to-excalidraw\";\nimport { convertToExcalidrawElements } from \"@excalidraw/excalidraw\";\n\n// Importamos Excalidraw sin SSR\nconst Excalidraw = dynamic(\n  () => import(\"@excalidraw/excalidraw\").then((mod) => mod.Excalidraw),\n  { ssr: false }\n);\n\nexport default function ExcalidrawPage() {\n  const excalidrawRef = useRef<any>(null);\n  const [mermaidInput, setMermaidInput] = useState(\"\"); // Estado para capturar Mermaid\n\n  // Función para convertir Mermaid a elementos de Excalidraw\n  const handleConvertMermaid = async () => {\n    try {\n      // Convertir el código Mermaid en elementos Excalidraw\n      const { elements, files } = await parseMermaidToExcalidraw(mermaidInput, {\n        fontSize: 16,\n      });\n\n      // Convertir a formato Excalidraw\n      const excalidrawElements = convertToExcalidrawElements(elements);\n\n      // Insertar los elementos en Excalidraw\n      if (excalidrawRef.current) {\n        excalidrawRef.current.updateScene({\n          elements: excalidrawElements,\n          files,\n        });\n      }\n    } catch (error) {\n      console.error(\"Error al convertir Mermaid:\", error);\n    }\n  };\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\", display: \"flex\", flexDirection: \"column\" }}>\n      {/* Input para el código Mermaid */}\n      <textarea\n        value={mermaidInput}\n        onChange={(e) => setMermaidInput(e.target.value)}\n        placeholder=\"Escribe tu código Mermaid aquí...\"\n        style={{\n          width: \"100%\",\n          height: \"100px\",\n          fontSize: \"16px\",\n          border: \"1px solid #ccc\",\n          marginBottom: \"10px\",\n        }}\n      />\n\n      {/* Botón para convertir */}\n      <button onClick={handleConvertMermaid} style={{ marginBottom: \"10px\" }}>\n        Convertir a Excalidraw\n      </button>\n\n      {/* Lienzo de Excalidraw */}\n      <div style={{ flex: 1, border: \"1px solid #ccc\" }}>\n        <Excalidraw ref={excalidrawRef} />\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;;;;;;AAEA;;AALA;;;;;;AAOA,gCAAgC;AAChC,MAAM,aAAa,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD,EACvB,IAAM,mKAAiC,IAAI,CAAC,CAAC,MAAQ,IAAI,UAAU;;;;;;IACjE,KAAK;;AAGM,SAAS;IACtB,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAO;IAClC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,KAAK,+BAA+B;IAErF,2DAA2D;IAC3D,MAAM,uBAAuB;QAC3B,IAAI;YACF,sDAAsD;YACtD,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,yBAAyB,cAAc;gBACvE,UAAU;YACZ;YAEA,iCAAiC;YACjC,MAAM,qBAAqB,CAAA,GAAA,kJAAA,CAAA,8BAA2B,AAAD,EAAE;YAEvD,uCAAuC;YACvC,IAAI,cAAc,OAAO,EAAE;gBACzB,cAAc,OAAO,CAAC,WAAW,CAAC;oBAChC,UAAU;oBACV;gBACF;YACF;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,qBACE,8OAAC;QAAI,OAAO;YAAE,OAAO;YAAS,QAAQ;YAAS,SAAS;YAAQ,eAAe;QAAS;;0BAEtF,8OAAC;gBACC,OAAO;gBACP,UAAU,CAAC,IAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;gBAC/C,aAAY;gBACZ,OAAO;oBACL,OAAO;oBACP,QAAQ;oBACR,UAAU;oBACV,QAAQ;oBACR,cAAc;gBAChB;;;;;;0BAIF,8OAAC;gBAAO,SAAS;gBAAsB,OAAO;oBAAE,cAAc;gBAAO;0BAAG;;;;;;0BAKxE,8OAAC;gBAAI,OAAO;oBAAE,MAAM;oBAAG,QAAQ;gBAAiB;0BAC9C,cAAA,8OAAC;oBAAW,KAAK;;;;;;;;;;;;;;;;;AAIzB","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}