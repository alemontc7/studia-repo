{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PORTAL_TYPE:\n          return \"Portal\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = require(\"next/dist/compiled/react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray;\n    new (\"function\" === typeof WeakMap ? WeakMap : Map)();\n    var createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          },\n      specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsxDEV = function (\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self\n    ) {\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        isStaticChildren,\n        source,\n        self,\n        Error(\"react-stack-top-frame\"),\n        createTask(getTaskName(type))\n      );\n    };\n  })();\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/next/dist/compiled/react/jsx-dev-runtime.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-dev-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-dev-runtime.development.js');\n}\n"],"names":[],"mappings":"AAEI;AAFJ;AAEA,uCAA2C;;AAE3C,OAAO;IACL,OAAO,OAAO;AAChB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/next/src/shared/lib/lazy-dynamic/dynamic-bailout-to-csr.tsx"],"sourcesContent":["'use client'\n\nimport type { ReactElement } from 'react'\nimport { BailoutToCSRError } from './bailout-to-csr'\n\ninterface BailoutToCSRProps {\n  reason: string\n  children: ReactElement\n}\n\n/**\n * If rendered on the server, this component throws an error\n * to signal Next.js that it should bail out to client-side rendering instead.\n */\nexport function BailoutToCSR({ reason, children }: BailoutToCSRProps) {\n  if (typeof window === 'undefined') {\n    throw new BailoutToCSRError(reason)\n  }\n\n  return children\n}\n"],"names":["BailoutToCSR","reason","children","window","BailoutToCSRError"],"mappings":"AAAA;;;;;+BAcgBA,gBAAAA;;;eAAAA;;;8BAXkB;AAW3B,SAASA,aAAa,KAAuC;IAAvC,IAAA,EAAEC,MAAM,EAAEC,QAAQ,EAAqB,GAAvC;IAC3B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,OAAA,cAA6B,CAA7B,IAAIC,cAAAA,iBAAiB,CAACH,SAAtB,qBAAA;mBAAA;wBAAA;0BAAA;QAA4B;IACpC;IAEA,OAAOC;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/next/src/shared/lib/encode-uri-path.ts"],"sourcesContent":["export function encodeURIPath(file: string) {\n  return file\n    .split('/')\n    .map((p) => encodeURIComponent(p))\n    .join('/')\n}\n"],"names":["encodeURIPath","file","split","map","p","encodeURIComponent","join"],"mappings":";;;;+BAAgBA,iBAAAA;;;eAAAA;;;AAAT,SAASA,cAAcC,IAAY;IACxC,OAAOA,KACJC,KAAK,CAAC,KACNC,GAAG,CAAC,CAACC,IAAMC,mBAAmBD,IAC9BE,IAAI,CAAC;AACV","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/next/src/shared/lib/lazy-dynamic/preload-chunks.tsx"],"sourcesContent":["'use client'\n\nimport { preload } from 'react-dom'\n\nimport { workAsyncStorage } from '../../../server/app-render/work-async-storage.external'\nimport { encodeURIPath } from '../encode-uri-path'\n\nexport function PreloadChunks({\n  moduleIds,\n}: {\n  moduleIds: string[] | undefined\n}) {\n  // Early return in client compilation and only load requestStore on server side\n  if (typeof window !== 'undefined') {\n    return null\n  }\n\n  const workStore = workAsyncStorage.getStore()\n  if (workStore === undefined) {\n    return null\n  }\n\n  const allFiles = []\n\n  // Search the current dynamic call unique key id in react loadable manifest,\n  // and find the corresponding CSS files to preload\n  if (workStore.reactLoadableManifest && moduleIds) {\n    const manifest = workStore.reactLoadableManifest\n    for (const key of moduleIds) {\n      if (!manifest[key]) continue\n      const chunks = manifest[key].files\n      allFiles.push(...chunks)\n    }\n  }\n\n  if (allFiles.length === 0) {\n    return null\n  }\n\n  return (\n    <>\n      {allFiles.map((chunk) => {\n        const href = `${workStore.assetPrefix}/_next/${encodeURIPath(chunk)}`\n        const isCss = chunk.endsWith('.css')\n        // If it's stylesheet we use `precedence` o help hoist with React Float.\n        // For stylesheets we actually need to render the CSS because nothing else is going to do it so it needs to be part of the component tree.\n        // The `preload` for stylesheet is not optional.\n        if (isCss) {\n          return (\n            <link\n              key={chunk}\n              // @ts-ignore\n              precedence=\"dynamic\"\n              href={href}\n              rel=\"stylesheet\"\n              as=\"style\"\n            />\n          )\n        } else {\n          // If it's script we use ReactDOM.preload to preload the resources\n          preload(href, {\n            as: 'script',\n            fetchPriority: 'low',\n          })\n          return null\n        }\n      })}\n    </>\n  )\n}\n"],"names":["PreloadChunks","moduleIds","window","workStore","workAsyncStorage","getStore","undefined","allFiles","reactLoadableManifest","manifest","key","chunks","files","push","length","map","chunk","href","assetPrefix","encodeURIPath","isCss","endsWith","link","precedence","rel","as","preload","fetchPriority"],"mappings":"AAAA;;;;;+BAOgBA,iBAAAA;;;eAAAA;;;;0BALQ;0CAES;+BACH;AAEvB,SAASA,cAAc,KAI7B;IAJ6B,IAAA,EAC5BC,SAAS,EAGV,GAJ6B;IAK5B,+EAA+E;IAC/E,IAAI,OAAOC,WAAW,aAAa;QACjC,OAAO;IACT;IAEA,MAAMC,YAAYC,0BAAAA,gBAAgB,CAACC,QAAQ;IAC3C,IAAIF,cAAcG,WAAW;QAC3B,OAAO;IACT;IAEA,MAAMC,WAAW,EAAE;IAEnB,4EAA4E;IAC5E,kDAAkD;IAClD,IAAIJ,UAAUK,qBAAqB,IAAIP,WAAW;QAChD,MAAMQ,WAAWN,UAAUK,qBAAqB;QAChD,KAAK,MAAME,OAAOT,UAAW;YAC3B,IAAI,CAACQ,QAAQ,CAACC,IAAI,EAAE;YACpB,MAAMC,SAASF,QAAQ,CAACC,IAAI,CAACE,KAAK;YAClCL,SAASM,IAAI,IAAIF;QACnB;IACF;IAEA,IAAIJ,SAASO,MAAM,KAAK,GAAG;QACzB,OAAO;IACT;IAEA,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAAA,YAAA,QAAA,EAAA;kBACGP,SAASQ,GAAG,CAAC,CAACC;YACb,MAAMC,OAAUd,UAAUe,WAAW,GAAC,YAASC,CAAAA,GAAAA,eAAAA,aAAa,EAACH;YAC7D,MAAMI,QAAQJ,MAAMK,QAAQ,CAAC;YAC7B,wEAAwE;YACxE,0IAA0I;YAC1I,gDAAgD;YAChD,IAAID,OAAO;gBACT,OAAA,WAAA,GACE,CAAA,GAAA,YAAA,GAAA,EAACE,QAAAA;oBAEC,aAAa;oBACbC,YAAW;oBACXN,MAAMA;oBACNO,KAAI;oBACJC,IAAG;mBALET;YAQX,OAAO;gBACL,kEAAkE;gBAClEU,CAAAA,GAAAA,UAAAA,OAAO,EAACT,MAAM;oBACZQ,IAAI;oBACJE,eAAe;gBACjB;gBACA,OAAO;YACT;QACF;;AAGN","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/next/src/shared/lib/lazy-dynamic/loadable.tsx"],"sourcesContent":["import { Suspense, Fragment, lazy } from 'react'\nimport { BailoutToCSR } from './dynamic-bailout-to-csr'\nimport type { ComponentModule } from './types'\nimport { PreloadChunks } from './preload-chunks'\n\n// Normalize loader to return the module as form { default: Component } for `React.lazy`.\n// Also for backward compatible since next/dynamic allows to resolve a component directly with loader\n// Client component reference proxy need to be converted to a module.\nfunction convertModule<P>(\n  mod: React.ComponentType<P> | ComponentModule<P> | undefined\n): {\n  default: React.ComponentType<P>\n} {\n  // Check \"default\" prop before accessing it, as it could be client reference proxy that could break it reference.\n  // Cases:\n  // mod: { default: Component }\n  // mod: Component\n  // mod: { default: proxy(Component) }\n  // mod: proxy(Component)\n  const hasDefault = mod && 'default' in mod\n  return {\n    default: hasDefault\n      ? (mod as ComponentModule<P>).default\n      : (mod as React.ComponentType<P>),\n  }\n}\n\nconst defaultOptions = {\n  loader: () => Promise.resolve(convertModule(() => null)),\n  loading: null,\n  ssr: true,\n}\n\ninterface LoadableOptions {\n  loader?: () => Promise<React.ComponentType<any> | ComponentModule<any>>\n  loading?: React.ComponentType<any> | null\n  ssr?: boolean\n  modules?: string[]\n}\n\nfunction Loadable(options: LoadableOptions) {\n  const opts = { ...defaultOptions, ...options }\n  const Lazy = lazy(() => opts.loader().then(convertModule))\n  const Loading = opts.loading\n\n  function LoadableComponent(props: any) {\n    const fallbackElement = Loading ? (\n      <Loading isLoading={true} pastDelay={true} error={null} />\n    ) : null\n\n    // If it's non-SSR or provided a loading component, wrap it in a suspense boundary\n    const hasSuspenseBoundary = !opts.ssr || !!opts.loading\n    const Wrap = hasSuspenseBoundary ? Suspense : Fragment\n    const wrapProps = hasSuspenseBoundary ? { fallback: fallbackElement } : {}\n    const children = opts.ssr ? (\n      <>\n        {/* During SSR, we need to preload the CSS from the dynamic component to avoid flash of unstyled content */}\n        {typeof window === 'undefined' ? (\n          <PreloadChunks moduleIds={opts.modules} />\n        ) : null}\n        <Lazy {...props} />\n      </>\n    ) : (\n      <BailoutToCSR reason=\"next/dynamic\">\n        <Lazy {...props} />\n      </BailoutToCSR>\n    )\n\n    return <Wrap {...wrapProps}>{children}</Wrap>\n  }\n\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return LoadableComponent\n}\n\nexport default Loadable\n"],"names":["convertModule","mod","hasDefault","default","defaultOptions","loader","Promise","resolve","loading","ssr","Loadable","options","opts","Lazy","lazy","then","Loading","LoadableComponent","props","fallbackElement","isLoading","pastDelay","error","hasSuspenseBoundary","Wrap","Suspense","Fragment","wrapProps","fallback","children","window","PreloadChunks","moduleIds","modules","BailoutToCSR","reason","displayName"],"mappings":";;;;+BA4EA,WAAA;;;eAAA;;;;uBA5EyC;qCACZ;+BAEC;AAE9B,yFAAyF;AACzF,qGAAqG;AACrG,qEAAqE;AACrE,SAASA,cACPC,GAA4D;IAI5D,iHAAiH;IACjH,SAAS;IACT,8BAA8B;IAC9B,iBAAiB;IACjB,qCAAqC;IACrC,wBAAwB;IACxB,MAAMC,aAAaD,OAAO,aAAaA;IACvC,OAAO;QACLE,SAASD,aACJD,IAA2BE,OAAO,GAClCF;IACP;AACF;AAEA,MAAMG,iBAAiB;IACrBC,QAAQ,IAAMC,QAAQC,OAAO,CAACP,cAAc,IAAM;IAClDQ,SAAS;IACTC,KAAK;AACP;AASA,SAASC,SAASC,OAAwB;IACxC,MAAMC,OAAO;QAAE,GAAGR,cAAc;QAAE,GAAGO,OAAO;IAAC;IAC7C,MAAME,OAAAA,WAAAA,GAAOC,CAAAA,GAAAA,OAAAA,IAAI,EAAC,IAAMF,KAAKP,MAAM,GAAGU,IAAI,CAACf;IAC3C,MAAMgB,UAAUJ,KAAKJ,OAAO;IAE5B,SAASS,kBAAkBC,KAAU;QACnC,MAAMC,kBAAkBH,UAAAA,WAAAA,GACtB,CAAA,GAAA,YAAA,GAAA,EAACA,SAAAA;YAAQI,WAAW;YAAMC,WAAW;YAAMC,OAAO;aAChD;QAEJ,kFAAkF;QAClF,MAAMC,sBAAsB,CAACX,KAAKH,GAAG,IAAI,CAAC,CAACG,KAAKJ,OAAO;QACvD,MAAMgB,OAAOD,sBAAsBE,OAAAA,QAAQ,GAAGC,OAAAA,QAAQ;QACtD,MAAMC,YAAYJ,sBAAsB;YAAEK,UAAUT;QAAgB,IAAI,CAAC;QACzE,MAAMU,WAAWjB,KAAKH,GAAG,GAAA,WAAA,GACvB,CAAA,GAAA,YAAA,IAAA,EAAA,YAAA,QAAA,EAAA;;gBAEG,OAAOqB,WAAW,cAAA,WAAA,GACjB,CAAA,GAAA,YAAA,GAAA,EAACC,eAAAA,aAAa,EAAA;oBAACC,WAAWpB,KAAKqB,OAAO;qBACpC;8BACJ,CAAA,GAAA,YAAA,GAAA,EAACpB,MAAAA;oBAAM,GAAGK,KAAK;;;2BAGjB,CAAA,GAAA,YAAA,GAAA,EAACgB,qBAAAA,YAAY,EAAA;YAACC,QAAO;sBACnB,WAAA,GAAA,CAAA,GAAA,YAAA,GAAA,EAACtB,MAAAA;gBAAM,GAAGK,KAAK;;;QAInB,OAAA,WAAA,GAAO,CAAA,GAAA,YAAA,GAAA,EAACM,MAAAA;YAAM,GAAGG,SAAS;sBAAGE;;IAC/B;IAEAZ,kBAAkBmB,WAAW,GAAG;IAEhC,OAAOnB;AACT;MAEA,WAAeP","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/next/src/shared/lib/app-dynamic.tsx"],"sourcesContent":["import type React from 'react'\nimport type { JSX } from 'react'\nimport Loadable from './lazy-dynamic/loadable'\n\nimport type {\n  LoadableGeneratedOptions,\n  DynamicOptionsLoadingProps,\n  Loader,\n  LoaderComponent,\n} from './lazy-dynamic/types'\n\nexport {\n  type LoadableGeneratedOptions,\n  type DynamicOptionsLoadingProps,\n  type Loader,\n  type LoaderComponent,\n}\n\nexport type DynamicOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: () => JSX.Element | null\n  loader?: Loader<P>\n  loadableGenerated?: LoadableGeneratedOptions\n  modules?: string[]\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = DynamicOptions<P>\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  const loadableOptions: LoadableOptions<P> = {}\n\n  if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n  }\n\n  const mergedOptions = {\n    ...loadableOptions,\n    ...options,\n  }\n\n  return Loadable({\n    ...mergedOptions,\n    modules: mergedOptions.loadableGenerated?.modules,\n  })\n}\n"],"names":["dynamic","dynamicOptions","options","mergedOptions","loadableOptions","loader","Loadable","modules","loadableGenerated"],"mappings":";;;;+BAkCA,WAAA;;;eAAwBA;;;;mEAhCH;AAgCN,SAASA,QACtBC,cAA6C,EAC7CC,OAA2B;QAehBC;IAbX,MAAMC,kBAAsC,CAAC;IAE7C,IAAI,OAAOH,mBAAmB,YAAY;QACxCG,gBAAgBC,MAAM,GAAGJ;IAC3B;IAEA,MAAME,gBAAgB;QACpB,GAAGC,eAAe;QAClB,GAAGF,OAAO;IACZ;IAEA,OAAOI,CAAAA,GAAAA,UAAAA,OAAQ,EAAC;QACd,GAAGH,aAAa;QAChBI,OAAO,EAAA,CAAEJ,mCAAAA,cAAcK,iBAAiB,KAAA,OAAA,KAAA,IAA/BL,iCAAiCI,OAAO;IACnD;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/constants.js"],"sourcesContent":["export const DEFAULT_FONT_SIZE = 20;\nexport const SVG_TO_SHAPE_MAPPER = {\n    rect: \"rectangle\",\n    circle: \"ellipse\",\n};\n// visit https://mermaid.js.org/schemas/config.schema.json for default schema\nexport const MERMAID_CONFIG = {\n    startOnLoad: false,\n    flowchart: { curve: \"linear\" },\n    themeVariables: {\n        // Multiplying by 1.25 to increase the font size by 25% and render correctly in Excalidraw\n        fontSize: `${DEFAULT_FONT_SIZE * 1.25}px`,\n    },\n    maxEdges: 500,\n    maxTextSize: 50000,\n};\n"],"names":[],"mappings":";;;;;AAAO,MAAM,oBAAoB;AAC1B,MAAM,sBAAsB;IAC/B,MAAM;IACN,QAAQ;AACZ;AAEO,MAAM,iBAAiB;IAC1B,aAAa;IACb,WAAW;QAAE,OAAO;IAAS;IAC7B,gBAAgB;QACZ,0FAA0F;QAC1F,UAAU,GAAG,oBAAoB,KAAK,EAAE,CAAC;IAC7C;IACA,UAAU;IACV,aAAa;AACjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/converter/GraphConverter.js"],"sourcesContent":["import { DEFAULT_FONT_SIZE } from \"../constants.js\";\nexport class GraphConverter {\n    constructor({ converter, }) {\n        this.convert = (graph, config) => {\n            return this.converter(graph, {\n                ...config,\n                fontSize: config.fontSize || DEFAULT_FONT_SIZE,\n            });\n        };\n        this.converter = converter;\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM;IACT,YAAY,EAAE,SAAS,EAAG,CAAE;QACxB,IAAI,CAAC,OAAO,GAAG,CAAC,OAAO;YACnB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO;gBACzB,GAAG,MAAM;gBACT,UAAU,OAAO,QAAQ,IAAI,mLAAA,CAAA,oBAAiB;YAClD;QACJ;QACA,IAAI,CAAC,SAAS,GAAG;IACrB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 502, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/interfaces.js"],"sourcesContent":["export var VERTEX_TYPE;\n(function (VERTEX_TYPE) {\n    VERTEX_TYPE[\"ROUND\"] = \"round\";\n    VERTEX_TYPE[\"STADIUM\"] = \"stadium\";\n    VERTEX_TYPE[\"DOUBLECIRCLE\"] = \"doublecircle\";\n    VERTEX_TYPE[\"CIRCLE\"] = \"circle\";\n    VERTEX_TYPE[\"DIAMOND\"] = \"diamond\";\n})(VERTEX_TYPE || (VERTEX_TYPE = {}));\nexport var LABEL_STYLE_PROPERTY;\n(function (LABEL_STYLE_PROPERTY) {\n    LABEL_STYLE_PROPERTY[\"COLOR\"] = \"color\";\n})(LABEL_STYLE_PROPERTY || (LABEL_STYLE_PROPERTY = {}));\nexport var CONTAINER_STYLE_PROPERTY;\n(function (CONTAINER_STYLE_PROPERTY) {\n    CONTAINER_STYLE_PROPERTY[\"FILL\"] = \"fill\";\n    CONTAINER_STYLE_PROPERTY[\"STROKE\"] = \"stroke\";\n    CONTAINER_STYLE_PROPERTY[\"STROKE_WIDTH\"] = \"stroke-width\";\n    CONTAINER_STYLE_PROPERTY[\"STROKE_DASHARRAY\"] = \"stroke-dasharray\";\n})(CONTAINER_STYLE_PROPERTY || (CONTAINER_STYLE_PROPERTY = {}));\n"],"names":[],"mappings":";;;;;AAAO,IAAI;AACX,CAAC,SAAU,WAAW;IAClB,WAAW,CAAC,QAAQ,GAAG;IACvB,WAAW,CAAC,UAAU,GAAG;IACzB,WAAW,CAAC,eAAe,GAAG;IAC9B,WAAW,CAAC,SAAS,GAAG;IACxB,WAAW,CAAC,UAAU,GAAG;AAC7B,CAAC,EAAE,eAAe,CAAC,cAAc,CAAC,CAAC;AAC5B,IAAI;AACX,CAAC,SAAU,oBAAoB;IAC3B,oBAAoB,CAAC,QAAQ,GAAG;AACpC,CAAC,EAAE,wBAAwB,CAAC,uBAAuB,CAAC,CAAC;AAC9C,IAAI;AACX,CAAC,SAAU,wBAAwB;IAC/B,wBAAwB,CAAC,OAAO,GAAG;IACnC,wBAAwB,CAAC,SAAS,GAAG;IACrC,wBAAwB,CAAC,eAAe,GAAG;IAC3C,wBAAwB,CAAC,mBAAmB,GAAG;AACnD,CAAC,EAAE,4BAA4B,CAAC,2BAA2B,CAAC,CAAC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 526, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/converter/helpers.js"],"sourcesContent":["import { CONTAINER_STYLE_PROPERTY, LABEL_STYLE_PROPERTY, } from \"../interfaces.js\";\nimport { removeMarkdown } from \"@excalidraw/markdown-to-text\";\n/**\n * Convert mermaid edge type to Excalidraw arrow type\n */\nconst MERMAID_EDGE_TYPE_MAPPER = {\n    arrow_circle: {\n        endArrowhead: \"dot\",\n    },\n    arrow_cross: {\n        endArrowhead: \"bar\",\n    },\n    arrow_open: {\n        endArrowhead: null,\n        startArrowhead: null,\n    },\n    double_arrow_circle: {\n        endArrowhead: \"dot\",\n        startArrowhead: \"dot\",\n    },\n    double_arrow_cross: {\n        endArrowhead: \"bar\",\n        startArrowhead: \"bar\",\n    },\n    double_arrow_point: {\n        endArrowhead: \"arrow\",\n        startArrowhead: \"arrow\",\n    },\n};\nexport const computeExcalidrawArrowType = (mermaidArrowType) => {\n    return MERMAID_EDGE_TYPE_MAPPER[mermaidArrowType];\n};\n// Get text from graph elements, fallback markdown to text\nexport const getText = (element) => {\n    let text = element.text;\n    if (element.labelType === \"markdown\") {\n        text = removeMarkdown(element.text);\n    }\n    return removeFontAwesomeIcons(text);\n};\n/**\n * Remove font awesome icons support from text\n */\nconst removeFontAwesomeIcons = (input) => {\n    const fontAwesomeRegex = /\\s?(fa|fab):[a-zA-Z0-9-]+/g;\n    return input.replace(fontAwesomeRegex, \"\");\n};\n/**\n * Compute style for vertex\n */\nexport const computeExcalidrawVertexStyle = (style) => {\n    const excalidrawProperty = {};\n    Object.keys(style).forEach((property) => {\n        switch (property) {\n            case CONTAINER_STYLE_PROPERTY.FILL: {\n                excalidrawProperty.backgroundColor = style[property];\n                excalidrawProperty.fillStyle = \"solid\";\n                break;\n            }\n            case CONTAINER_STYLE_PROPERTY.STROKE: {\n                excalidrawProperty.strokeColor = style[property];\n                break;\n            }\n            case CONTAINER_STYLE_PROPERTY.STROKE_WIDTH: {\n                excalidrawProperty.strokeWidth = Number(style[property]?.split(\"px\")[0]);\n                break;\n            }\n            case CONTAINER_STYLE_PROPERTY.STROKE_DASHARRAY: {\n                excalidrawProperty.strokeStyle = \"dashed\";\n                break;\n            }\n        }\n    });\n    return excalidrawProperty;\n};\n/**\n * Compute style for label\n */\nexport const computeExcalidrawVertexLabelStyle = (style) => {\n    const excalidrawProperty = {};\n    Object.keys(style).forEach((property) => {\n        switch (property) {\n            case LABEL_STYLE_PROPERTY.COLOR: {\n                excalidrawProperty.strokeColor = style[property];\n                break;\n            }\n        }\n    });\n    return excalidrawProperty;\n};\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AACA;;CAEC,GACD,MAAM,2BAA2B;IAC7B,cAAc;QACV,cAAc;IAClB;IACA,aAAa;QACT,cAAc;IAClB;IACA,YAAY;QACR,cAAc;QACd,gBAAgB;IACpB;IACA,qBAAqB;QACjB,cAAc;QACd,gBAAgB;IACpB;IACA,oBAAoB;QAChB,cAAc;QACd,gBAAgB;IACpB;IACA,oBAAoB;QAChB,cAAc;QACd,gBAAgB;IACpB;AACJ;AACO,MAAM,6BAA6B,CAAC;IACvC,OAAO,wBAAwB,CAAC,iBAAiB;AACrD;AAEO,MAAM,UAAU,CAAC;IACpB,IAAI,OAAO,QAAQ,IAAI;IACvB,IAAI,QAAQ,SAAS,KAAK,YAAY;QAClC,OAAO,CAAA,GAAA,0KAAA,CAAA,iBAAc,AAAD,EAAE,QAAQ,IAAI;IACtC;IACA,OAAO,uBAAuB;AAClC;AACA;;CAEC,GACD,MAAM,yBAAyB,CAAC;IAC5B,MAAM,mBAAmB;IACzB,OAAO,MAAM,OAAO,CAAC,kBAAkB;AAC3C;AAIO,MAAM,+BAA+B,CAAC;IACzC,MAAM,qBAAqB,CAAC;IAC5B,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC;QACxB,OAAQ;YACJ,KAAK,oLAAA,CAAA,2BAAwB,CAAC,IAAI;gBAAE;oBAChC,mBAAmB,eAAe,GAAG,KAAK,CAAC,SAAS;oBACpD,mBAAmB,SAAS,GAAG;oBAC/B;gBACJ;YACA,KAAK,oLAAA,CAAA,2BAAwB,CAAC,MAAM;gBAAE;oBAClC,mBAAmB,WAAW,GAAG,KAAK,CAAC,SAAS;oBAChD;gBACJ;YACA,KAAK,oLAAA,CAAA,2BAAwB,CAAC,YAAY;gBAAE;oBACxC,mBAAmB,WAAW,GAAG,OAAO,KAAK,CAAC,SAAS,EAAE,MAAM,KAAK,CAAC,EAAE;oBACvE;gBACJ;YACA,KAAK,oLAAA,CAAA,2BAAwB,CAAC,gBAAgB;gBAAE;oBAC5C,mBAAmB,WAAW,GAAG;oBACjC;gBACJ;QACJ;IACJ;IACA,OAAO;AACX;AAIO,MAAM,oCAAoC,CAAC;IAC9C,MAAM,qBAAqB,CAAC;IAC5B,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC;QACxB,OAAQ;YACJ,KAAK,oLAAA,CAAA,uBAAoB,CAAC,KAAK;gBAAE;oBAC7B,mBAAmB,WAAW,GAAG,KAAK,CAAC,SAAS;oBAChD;gBACJ;QACJ;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 626, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/converter/types/flowchart.js"],"sourcesContent":["import { GraphConverter } from \"../GraphConverter.js\";\nimport { getText, computeExcalidrawVertexStyle, computeExcalidrawVertexLabelStyle, computeExcalidrawArrowType, } from \"../helpers.js\";\nimport { VERTEX_TYPE } from \"../../interfaces.js\";\nconst computeGroupIds = (graph) => {\n    // Parse the diagram into a tree for rendering and grouping\n    const tree = {};\n    graph.subGraphs.map((subGraph) => {\n        subGraph.nodeIds.forEach((nodeId) => {\n            tree[subGraph.id] = {\n                id: subGraph.id,\n                parent: null,\n                isLeaf: false,\n            };\n            tree[nodeId] = {\n                id: nodeId,\n                parent: subGraph.id,\n                isLeaf: graph.vertices[nodeId] !== undefined,\n            };\n        });\n    });\n    const mapper = {};\n    [...Object.keys(graph.vertices), ...graph.subGraphs.map((c) => c.id)].forEach((id) => {\n        if (!tree[id]) {\n            return;\n        }\n        let curr = tree[id];\n        const groupIds = [];\n        if (!curr.isLeaf) {\n            groupIds.push(`subgraph_group_${curr.id}`);\n        }\n        while (true) {\n            if (curr.parent) {\n                groupIds.push(`subgraph_group_${curr.parent}`);\n                curr = tree[curr.parent];\n            }\n            else {\n                break;\n            }\n        }\n        mapper[id] = groupIds;\n    });\n    return {\n        getGroupIds: (elementId) => {\n            return mapper[elementId] || [];\n        },\n        getParentId: (elementId) => {\n            return tree[elementId] ? tree[elementId].parent : null;\n        },\n    };\n};\nexport const FlowchartToExcalidrawSkeletonConverter = new GraphConverter({\n    converter: (graph, options) => {\n        const elements = [];\n        const fontSize = options.fontSize;\n        const { getGroupIds, getParentId } = computeGroupIds(graph);\n        // SubGraphs\n        graph.subGraphs.reverse().forEach((subGraph) => {\n            const groupIds = getGroupIds(subGraph.id);\n            const containerElement = {\n                id: subGraph.id,\n                type: \"rectangle\",\n                groupIds,\n                x: subGraph.x,\n                y: subGraph.y,\n                width: subGraph.width,\n                height: subGraph.height,\n                label: {\n                    groupIds,\n                    text: getText(subGraph),\n                    fontSize,\n                    verticalAlign: \"top\",\n                },\n            };\n            elements.push(containerElement);\n        });\n        // Vertices\n        Object.values(graph.vertices).forEach((vertex) => {\n            if (!vertex) {\n                return;\n            }\n            const groupIds = getGroupIds(vertex.id);\n            // Compute custom style\n            const containerStyle = computeExcalidrawVertexStyle(vertex.containerStyle);\n            const labelStyle = computeExcalidrawVertexLabelStyle(vertex.labelStyle);\n            let containerElement = {\n                id: vertex.id,\n                type: \"rectangle\",\n                groupIds,\n                x: vertex.x,\n                y: vertex.y,\n                width: vertex.width,\n                height: vertex.height,\n                strokeWidth: 2,\n                label: {\n                    groupIds,\n                    text: getText(vertex),\n                    fontSize,\n                    ...labelStyle,\n                },\n                link: vertex.link || null,\n                ...containerStyle,\n            };\n            switch (vertex.type) {\n                case VERTEX_TYPE.STADIUM: {\n                    containerElement = { ...containerElement, roundness: { type: 3 } };\n                    break;\n                }\n                case VERTEX_TYPE.ROUND: {\n                    containerElement = { ...containerElement, roundness: { type: 3 } };\n                    break;\n                }\n                case VERTEX_TYPE.DOUBLECIRCLE: {\n                    const CIRCLE_MARGIN = 5;\n                    // Create new groupId for double circle\n                    groupIds.push(`doublecircle_${vertex.id}}`);\n                    // Create inner circle element\n                    const innerCircle = {\n                        type: \"ellipse\",\n                        groupIds,\n                        x: vertex.x + CIRCLE_MARGIN,\n                        y: vertex.y + CIRCLE_MARGIN,\n                        width: vertex.width - CIRCLE_MARGIN * 2,\n                        height: vertex.height - CIRCLE_MARGIN * 2,\n                        strokeWidth: 2,\n                        roundness: { type: 3 },\n                        label: {\n                            groupIds,\n                            text: getText(vertex),\n                            fontSize,\n                        },\n                    };\n                    containerElement = { ...containerElement, groupIds, type: \"ellipse\" };\n                    elements.push(innerCircle);\n                    break;\n                }\n                case VERTEX_TYPE.CIRCLE: {\n                    containerElement.type = \"ellipse\";\n                    break;\n                }\n                case VERTEX_TYPE.DIAMOND: {\n                    containerElement.type = \"diamond\";\n                    break;\n                }\n            }\n            elements.push(containerElement);\n        });\n        // Edges\n        graph.edges.forEach((edge) => {\n            let groupIds = [];\n            const startParentId = getParentId(edge.start);\n            const endParentId = getParentId(edge.end);\n            if (startParentId && startParentId === endParentId) {\n                groupIds = getGroupIds(startParentId);\n            }\n            // Get arrow position data\n            const { startX, startY, reflectionPoints } = edge;\n            // Calculate Excalidraw arrow's points\n            const points = reflectionPoints.map((point) => [\n                point.x - reflectionPoints[0].x,\n                point.y - reflectionPoints[0].y,\n            ]);\n            // Get supported arrow type\n            const arrowType = computeExcalidrawArrowType(edge.type);\n            const arrowId = `${edge.start}_${edge.end}`;\n            const containerElement = {\n                id: arrowId,\n                type: \"arrow\",\n                groupIds,\n                x: startX,\n                y: startY,\n                // 4 and 2 are the Excalidraw's stroke width of thick and thin respectively\n                // TODO: use constant exported from Excalidraw package\n                strokeWidth: edge.stroke === \"thick\" ? 4 : 2,\n                strokeStyle: edge.stroke === \"dotted\" ? \"dashed\" : undefined,\n                points,\n                ...(edge.text\n                    ? { label: { text: getText(edge), fontSize, groupIds } }\n                    : {}),\n                roundness: {\n                    type: 2,\n                },\n                ...arrowType,\n            };\n            // Bind start and end vertex to arrow\n            const startVertex = elements.find((e) => e.id === edge.start);\n            const endVertex = elements.find((e) => e.id === edge.end);\n            if (!startVertex || !endVertex) {\n                return;\n            }\n            containerElement.start = {\n                id: startVertex.id || \"\",\n            };\n            containerElement.end = {\n                id: endVertex.id || \"\",\n            };\n            elements.push(containerElement);\n        });\n        return {\n            elements,\n        };\n    },\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,kBAAkB,CAAC;IACrB,2DAA2D;IAC3D,MAAM,OAAO,CAAC;IACd,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC;QACjB,SAAS,OAAO,CAAC,OAAO,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG;gBAChB,IAAI,SAAS,EAAE;gBACf,QAAQ;gBACR,QAAQ;YACZ;YACA,IAAI,CAAC,OAAO,GAAG;gBACX,IAAI;gBACJ,QAAQ,SAAS,EAAE;gBACnB,QAAQ,MAAM,QAAQ,CAAC,OAAO,KAAK;YACvC;QACJ;IACJ;IACA,MAAM,SAAS,CAAC;IAChB;WAAI,OAAO,IAAI,CAAC,MAAM,QAAQ;WAAM,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE;KAAE,CAAC,OAAO,CAAC,CAAC;QAC3E,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACX;QACJ;QACA,IAAI,OAAO,IAAI,CAAC,GAAG;QACnB,MAAM,WAAW,EAAE;QACnB,IAAI,CAAC,KAAK,MAAM,EAAE;YACd,SAAS,IAAI,CAAC,CAAC,eAAe,EAAE,KAAK,EAAE,EAAE;QAC7C;QACA,MAAO,KAAM;YACT,IAAI,KAAK,MAAM,EAAE;gBACb,SAAS,IAAI,CAAC,CAAC,eAAe,EAAE,KAAK,MAAM,EAAE;gBAC7C,OAAO,IAAI,CAAC,KAAK,MAAM,CAAC;YAC5B,OACK;gBACD;YACJ;QACJ;QACA,MAAM,CAAC,GAAG,GAAG;IACjB;IACA,OAAO;QACH,aAAa,CAAC;YACV,OAAO,MAAM,CAAC,UAAU,IAAI,EAAE;QAClC;QACA,aAAa,CAAC;YACV,OAAO,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG;QACtD;IACJ;AACJ;AACO,MAAM,yCAAyC,IAAI,qMAAA,CAAA,iBAAc,CAAC;IACrE,WAAW,CAAC,OAAO;QACf,MAAM,WAAW,EAAE;QACnB,MAAM,WAAW,QAAQ,QAAQ;QACjC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,gBAAgB;QACrD,YAAY;QACZ,MAAM,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;YAC/B,MAAM,WAAW,YAAY,SAAS,EAAE;YACxC,MAAM,mBAAmB;gBACrB,IAAI,SAAS,EAAE;gBACf,MAAM;gBACN;gBACA,GAAG,SAAS,CAAC;gBACb,GAAG,SAAS,CAAC;gBACb,OAAO,SAAS,KAAK;gBACrB,QAAQ,SAAS,MAAM;gBACvB,OAAO;oBACH;oBACA,MAAM,CAAA,GAAA,8LAAA,CAAA,UAAO,AAAD,EAAE;oBACd;oBACA,eAAe;gBACnB;YACJ;YACA,SAAS,IAAI,CAAC;QAClB;QACA,WAAW;QACX,OAAO,MAAM,CAAC,MAAM,QAAQ,EAAE,OAAO,CAAC,CAAC;YACnC,IAAI,CAAC,QAAQ;gBACT;YACJ;YACA,MAAM,WAAW,YAAY,OAAO,EAAE;YACtC,uBAAuB;YACvB,MAAM,iBAAiB,CAAA,GAAA,8LAAA,CAAA,+BAA4B,AAAD,EAAE,OAAO,cAAc;YACzE,MAAM,aAAa,CAAA,GAAA,8LAAA,CAAA,oCAAiC,AAAD,EAAE,OAAO,UAAU;YACtE,IAAI,mBAAmB;gBACnB,IAAI,OAAO,EAAE;gBACb,MAAM;gBACN;gBACA,GAAG,OAAO,CAAC;gBACX,GAAG,OAAO,CAAC;gBACX,OAAO,OAAO,KAAK;gBACnB,QAAQ,OAAO,MAAM;gBACrB,aAAa;gBACb,OAAO;oBACH;oBACA,MAAM,CAAA,GAAA,8LAAA,CAAA,UAAO,AAAD,EAAE;oBACd;oBACA,GAAG,UAAU;gBACjB;gBACA,MAAM,OAAO,IAAI,IAAI;gBACrB,GAAG,cAAc;YACrB;YACA,OAAQ,OAAO,IAAI;gBACf,KAAK,oLAAA,CAAA,cAAW,CAAC,OAAO;oBAAE;wBACtB,mBAAmB;4BAAE,GAAG,gBAAgB;4BAAE,WAAW;gCAAE,MAAM;4BAAE;wBAAE;wBACjE;oBACJ;gBACA,KAAK,oLAAA,CAAA,cAAW,CAAC,KAAK;oBAAE;wBACpB,mBAAmB;4BAAE,GAAG,gBAAgB;4BAAE,WAAW;gCAAE,MAAM;4BAAE;wBAAE;wBACjE;oBACJ;gBACA,KAAK,oLAAA,CAAA,cAAW,CAAC,YAAY;oBAAE;wBAC3B,MAAM,gBAAgB;wBACtB,uCAAuC;wBACvC,SAAS,IAAI,CAAC,CAAC,aAAa,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;wBAC1C,8BAA8B;wBAC9B,MAAM,cAAc;4BAChB,MAAM;4BACN;4BACA,GAAG,OAAO,CAAC,GAAG;4BACd,GAAG,OAAO,CAAC,GAAG;4BACd,OAAO,OAAO,KAAK,GAAG,gBAAgB;4BACtC,QAAQ,OAAO,MAAM,GAAG,gBAAgB;4BACxC,aAAa;4BACb,WAAW;gCAAE,MAAM;4BAAE;4BACrB,OAAO;gCACH;gCACA,MAAM,CAAA,GAAA,8LAAA,CAAA,UAAO,AAAD,EAAE;gCACd;4BACJ;wBACJ;wBACA,mBAAmB;4BAAE,GAAG,gBAAgB;4BAAE;4BAAU,MAAM;wBAAU;wBACpE,SAAS,IAAI,CAAC;wBACd;oBACJ;gBACA,KAAK,oLAAA,CAAA,cAAW,CAAC,MAAM;oBAAE;wBACrB,iBAAiB,IAAI,GAAG;wBACxB;oBACJ;gBACA,KAAK,oLAAA,CAAA,cAAW,CAAC,OAAO;oBAAE;wBACtB,iBAAiB,IAAI,GAAG;wBACxB;oBACJ;YACJ;YACA,SAAS,IAAI,CAAC;QAClB;QACA,QAAQ;QACR,MAAM,KAAK,CAAC,OAAO,CAAC,CAAC;YACjB,IAAI,WAAW,EAAE;YACjB,MAAM,gBAAgB,YAAY,KAAK,KAAK;YAC5C,MAAM,cAAc,YAAY,KAAK,GAAG;YACxC,IAAI,iBAAiB,kBAAkB,aAAa;gBAChD,WAAW,YAAY;YAC3B;YACA,0BAA0B;YAC1B,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,gBAAgB,EAAE,GAAG;YAC7C,sCAAsC;YACtC,MAAM,SAAS,iBAAiB,GAAG,CAAC,CAAC,QAAU;oBAC3C,MAAM,CAAC,GAAG,gBAAgB,CAAC,EAAE,CAAC,CAAC;oBAC/B,MAAM,CAAC,GAAG,gBAAgB,CAAC,EAAE,CAAC,CAAC;iBAClC;YACD,2BAA2B;YAC3B,MAAM,YAAY,CAAA,GAAA,8LAAA,CAAA,6BAA0B,AAAD,EAAE,KAAK,IAAI;YACtD,MAAM,UAAU,GAAG,KAAK,KAAK,CAAC,CAAC,EAAE,KAAK,GAAG,EAAE;YAC3C,MAAM,mBAAmB;gBACrB,IAAI;gBACJ,MAAM;gBACN;gBACA,GAAG;gBACH,GAAG;gBACH,2EAA2E;gBAC3E,sDAAsD;gBACtD,aAAa,KAAK,MAAM,KAAK,UAAU,IAAI;gBAC3C,aAAa,KAAK,MAAM,KAAK,WAAW,WAAW;gBACnD;gBACA,GAAI,KAAK,IAAI,GACP;oBAAE,OAAO;wBAAE,MAAM,CAAA,GAAA,8LAAA,CAAA,UAAO,AAAD,EAAE;wBAAO;wBAAU;oBAAS;gBAAE,IACrD,CAAC,CAAC;gBACR,WAAW;oBACP,MAAM;gBACV;gBACA,GAAG,SAAS;YAChB;YACA,qCAAqC;YACrC,MAAM,cAAc,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,KAAK,KAAK;YAC5D,MAAM,YAAY,SAAS,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,KAAK,GAAG;YACxD,IAAI,CAAC,eAAe,CAAC,WAAW;gBAC5B;YACJ;YACA,iBAAiB,KAAK,GAAG;gBACrB,IAAI,YAAY,EAAE,IAAI;YAC1B;YACA,iBAAiB,GAAG,GAAG;gBACnB,IAAI,UAAU,EAAE,IAAI;YACxB;YACA,SAAS,IAAI,CAAC;QAClB;QACA,OAAO;YACH;QACJ;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 867, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 873, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/converter/types/graphImage.js"],"sourcesContent":["import { GraphConverter } from \"../GraphConverter.js\";\nimport { nanoid } from \"nanoid\";\nexport const GraphImageConverter = new GraphConverter({\n    converter: (graph) => {\n        const imageId = nanoid();\n        const { width, height } = graph;\n        const imageElement = {\n            type: \"image\",\n            x: 0,\n            y: 0,\n            width,\n            height,\n            status: \"saved\",\n            fileId: imageId,\n        };\n        const files = {\n            [imageId]: {\n                id: imageId,\n                mimeType: graph.mimeType,\n                dataURL: graph.dataURL,\n            },\n        };\n        return { files, elements: [imageElement] };\n    },\n});\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACO,MAAM,sBAAsB,IAAI,qMAAA,CAAA,iBAAc,CAAC;IAClD,WAAW,CAAC;QACR,MAAM,UAAU,CAAA,GAAA,4NAAA,CAAA,SAAM,AAAD;QACrB,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG;QAC1B,MAAM,eAAe;YACjB,MAAM;YACN,GAAG;YACH,GAAG;YACH;YACA;YACA,QAAQ;YACR,QAAQ;QACZ;QACA,MAAM,QAAQ;YACV,CAAC,QAAQ,EAAE;gBACP,IAAI;gBACJ,UAAU,MAAM,QAAQ;gBACxB,SAAS,MAAM,OAAO;YAC1B;QACJ;QACA,OAAO;YAAE;YAAO,UAAU;gBAAC;aAAa;QAAC;IAC7C;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 908, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 914, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/converter/transformToExcalidrawSkeleton.js"],"sourcesContent":["export const normalizeText = (text) => {\n    return text.replace(/\\\\n/g, \"\\n\");\n};\nexport const transformToExcalidrawLineSkeleton = (line) => {\n    const lineElement = {\n        type: \"line\",\n        x: line.startX,\n        y: line.startY,\n        points: [\n            [0, 0],\n            [line.endX - line.startX, line.endY - line.startY],\n        ],\n        width: line.endX - line.startX,\n        height: line.endY - line.startY,\n        strokeStyle: line.strokeStyle || \"solid\",\n        strokeColor: line.strokeColor || \"#000\",\n        strokeWidth: line.strokeWidth || 1,\n    };\n    if (line.groupId) {\n        Object.assign(lineElement, { groupIds: [line.groupId] });\n    }\n    if (line.id) {\n        Object.assign(lineElement, { id: line.id });\n    }\n    return lineElement;\n};\nexport const transformToExcalidrawTextSkeleton = (element) => {\n    const textElement = {\n        type: \"text\",\n        x: element.x,\n        y: element.y,\n        width: element.width,\n        height: element.height,\n        text: normalizeText(element.text) || \"\",\n        fontSize: element.fontSize,\n        verticalAlign: \"middle\",\n    };\n    if (element.groupId) {\n        Object.assign(textElement, { groupIds: [element.groupId] });\n    }\n    if (element.id) {\n        Object.assign(textElement, { id: element.id });\n    }\n    return textElement;\n};\nexport const transformToExcalidrawContainerSkeleton = (element) => {\n    let extraProps = {};\n    if (element.type === \"rectangle\" && element.subtype === \"activation\") {\n        extraProps = {\n            backgroundColor: \"#e9ecef\",\n            fillStyle: \"solid\",\n        };\n    }\n    const container = {\n        id: element.id,\n        type: element.type,\n        x: element.x,\n        y: element.y,\n        width: element.width,\n        height: element.height,\n        label: {\n            text: normalizeText(element?.label?.text || \"\"),\n            fontSize: element?.label?.fontSize,\n            verticalAlign: element.label?.verticalAlign || \"middle\",\n            strokeColor: element.label?.color || \"#000\",\n            groupIds: element.groupId ? [element.groupId] : [],\n        },\n        strokeStyle: element?.strokeStyle,\n        strokeWidth: element?.strokeWidth,\n        strokeColor: element?.strokeColor,\n        backgroundColor: element?.bgColor,\n        fillStyle: \"solid\",\n        ...extraProps,\n    };\n    if (element.groupId) {\n        Object.assign(container, { groupIds: [element.groupId] });\n    }\n    return container;\n};\nexport const transformToExcalidrawArrowSkeleton = (arrow) => {\n    const arrowElement = {\n        type: \"arrow\",\n        x: arrow.startX,\n        y: arrow.startY,\n        points: arrow.points || [\n            [0, 0],\n            [arrow.endX - arrow.startX, arrow.endY - arrow.startY],\n        ],\n        width: arrow.endX - arrow.startX,\n        height: arrow.endY - arrow.startY,\n        strokeStyle: arrow?.strokeStyle || \"solid\",\n        endArrowhead: arrow?.endArrowhead || null,\n        startArrowhead: arrow?.startArrowhead || null,\n        label: {\n            text: normalizeText(arrow?.label?.text || \"\"),\n            fontSize: 16,\n        },\n        roundness: {\n            type: 2,\n        },\n        start: arrow.start,\n        end: arrow.end,\n    };\n    if (arrow.groupId) {\n        Object.assign(arrowElement, { groupIds: [arrow.groupId] });\n    }\n    return arrowElement;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1069, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/converter/types/sequence.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { GraphConverter } from \"../GraphConverter.js\";\nimport { transformToExcalidrawLineSkeleton, transformToExcalidrawTextSkeleton, transformToExcalidrawContainerSkeleton, transformToExcalidrawArrowSkeleton, } from \"../transformToExcalidrawSkeleton.js\";\nexport const SequenceToExcalidrawSkeletonConvertor = new GraphConverter({\n    converter: (chart) => {\n        const elements = [];\n        const activations = [];\n        Object.values(chart.nodes).forEach((node) => {\n            if (!node || !node.length) {\n                return;\n            }\n            node.forEach((element) => {\n                let excalidrawElement;\n                switch (element.type) {\n                    case \"line\":\n                        excalidrawElement = transformToExcalidrawLineSkeleton(element);\n                        break;\n                    case \"rectangle\":\n                    case \"ellipse\":\n                        excalidrawElement = transformToExcalidrawContainerSkeleton(element);\n                        break;\n                    case \"text\":\n                        excalidrawElement = transformToExcalidrawTextSkeleton(element);\n                        break;\n                    default:\n                        throw `unknown type ${element.type}`;\n                        break;\n                }\n                if (element.type === \"rectangle\" && element?.subtype === \"activation\") {\n                    activations.push(excalidrawElement);\n                }\n                else {\n                    elements.push(excalidrawElement);\n                }\n            });\n        });\n        Object.values(chart.lines).forEach((line) => {\n            if (!line) {\n                return;\n            }\n            elements.push(transformToExcalidrawLineSkeleton(line));\n        });\n        Object.values(chart.arrows).forEach((arrow) => {\n            if (!arrow) {\n                return;\n            }\n            elements.push(transformToExcalidrawArrowSkeleton(arrow));\n            if (arrow.sequenceNumber) {\n                elements.push(transformToExcalidrawContainerSkeleton(arrow.sequenceNumber));\n            }\n        });\n        elements.push(...activations);\n        // loops\n        if (chart.loops) {\n            const { lines, texts, nodes } = chart.loops;\n            lines.forEach((line) => {\n                elements.push(transformToExcalidrawLineSkeleton(line));\n            });\n            texts.forEach((text) => {\n                elements.push(transformToExcalidrawTextSkeleton(text));\n            });\n            nodes.forEach((node) => {\n                elements.push(transformToExcalidrawContainerSkeleton(node));\n            });\n        }\n        if (chart.groups) {\n            chart.groups.forEach((group) => {\n                const { actorKeys, name } = group;\n                let minX = Infinity;\n                let minY = Infinity;\n                let maxX = 0;\n                let maxY = 0;\n                if (!actorKeys.length) {\n                    return;\n                }\n                const actors = elements.filter((ele) => {\n                    if (ele.id) {\n                        const hyphenIndex = ele.id.indexOf(\"-\");\n                        const id = ele.id.substring(0, hyphenIndex);\n                        return actorKeys.includes(id);\n                    }\n                });\n                actors.forEach((actor) => {\n                    if (actor.x === undefined ||\n                        actor.y === undefined ||\n                        actor.width === undefined ||\n                        actor.height === undefined) {\n                        throw new Error(`Actor attributes missing ${actor}`);\n                    }\n                    minX = Math.min(minX, actor.x);\n                    minY = Math.min(minY, actor.y);\n                    maxX = Math.max(maxX, actor.x + actor.width);\n                    maxY = Math.max(maxY, actor.y + actor.height);\n                });\n                // Draw the outer rectangle enclosing the group elements\n                const PADDING = 10;\n                const groupRectX = minX - PADDING;\n                const groupRectY = minY - PADDING;\n                const groupRectWidth = maxX - minX + PADDING * 2;\n                const groupRectHeight = maxY - minY + PADDING * 2;\n                const groupRectId = nanoid();\n                const groupRect = transformToExcalidrawContainerSkeleton({\n                    type: \"rectangle\",\n                    x: groupRectX,\n                    y: groupRectY,\n                    width: groupRectWidth,\n                    height: groupRectHeight,\n                    bgColor: group.fill,\n                    id: groupRectId,\n                });\n                elements.unshift(groupRect);\n                const frameId = nanoid();\n                const frameChildren = [groupRectId];\n                elements.forEach((ele) => {\n                    if (ele.type === \"frame\") {\n                        return;\n                    }\n                    if (ele.x === undefined ||\n                        ele.y === undefined ||\n                        ele.width === undefined ||\n                        ele.height === undefined) {\n                        throw new Error(`Element attributes missing ${ele}`);\n                    }\n                    if (ele.x >= minX &&\n                        ele.x + ele.width <= maxX &&\n                        ele.y >= minY &&\n                        ele.y + ele.height <= maxY) {\n                        const elementId = ele.id || nanoid();\n                        if (!ele.id) {\n                            Object.assign(ele, { id: elementId });\n                        }\n                        frameChildren.push(elementId);\n                    }\n                });\n                const frame = {\n                    type: \"frame\",\n                    id: frameId,\n                    name,\n                    children: frameChildren,\n                };\n                elements.push(frame);\n            });\n        }\n        return { elements };\n    },\n});\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1223, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/converter/types/class.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { transformToExcalidrawArrowSkeleton, transformToExcalidrawContainerSkeleton, transformToExcalidrawLineSkeleton, transformToExcalidrawTextSkeleton, } from \"../transformToExcalidrawSkeleton.js\";\nimport { GraphConverter } from \"../GraphConverter.js\";\nexport const classToExcalidrawSkeletonConvertor = new GraphConverter({\n    converter: (chart) => {\n        const elements = [];\n        Object.values(chart.nodes).forEach((node) => {\n            if (!node || !node.length) {\n                return;\n            }\n            node.forEach((element) => {\n                let excalidrawElement;\n                switch (element.type) {\n                    case \"line\":\n                        excalidrawElement = transformToExcalidrawLineSkeleton(element);\n                        break;\n                    case \"rectangle\":\n                    case \"ellipse\":\n                        excalidrawElement = transformToExcalidrawContainerSkeleton(element);\n                        break;\n                    case \"text\":\n                        excalidrawElement = transformToExcalidrawTextSkeleton(element);\n                        break;\n                    default:\n                        throw `unknown type ${element.type}`;\n                        break;\n                }\n                elements.push(excalidrawElement);\n            });\n        });\n        Object.values(chart.lines).forEach((line) => {\n            if (!line) {\n                return;\n            }\n            elements.push(transformToExcalidrawLineSkeleton(line));\n        });\n        Object.values(chart.arrows).forEach((arrow) => {\n            if (!arrow) {\n                return;\n            }\n            const excalidrawElement = transformToExcalidrawArrowSkeleton(arrow);\n            elements.push(excalidrawElement);\n        });\n        Object.values(chart.text).forEach((ele) => {\n            const excalidrawElement = transformToExcalidrawTextSkeleton(ele);\n            elements.push(excalidrawElement);\n        });\n        Object.values(chart.namespaces).forEach((namespace) => {\n            const classIds = Object.keys(namespace.classes);\n            const children = [...classIds];\n            const chartElements = [...chart.lines, ...chart.arrows, ...chart.text];\n            classIds.forEach((classId) => {\n                const childIds = chartElements\n                    .filter((ele) => ele.metadata && ele.metadata.classId === classId)\n                    .map((ele) => ele.id);\n                if (childIds.length) {\n                    children.push(...childIds);\n                }\n            });\n            const frame = {\n                type: \"frame\",\n                id: nanoid(),\n                name: namespace.id,\n                children,\n            };\n            elements.push(frame);\n        });\n        return { elements };\n    },\n});\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACO,MAAM,qCAAqC,IAAI,qMAAA,CAAA,iBAAc,CAAC;IACjE,WAAW,CAAC;QACR,MAAM,WAAW,EAAE;QACnB,OAAO,MAAM,CAAC,MAAM,KAAK,EAAE,OAAO,CAAC,CAAC;YAChC,IAAI,CAAC,QAAQ,CAAC,KAAK,MAAM,EAAE;gBACvB;YACJ;YACA,KAAK,OAAO,CAAC,CAAC;gBACV,IAAI;gBACJ,OAAQ,QAAQ,IAAI;oBAChB,KAAK;wBACD,oBAAoB,CAAA,GAAA,oNAAA,CAAA,oCAAiC,AAAD,EAAE;wBACtD;oBACJ,KAAK;oBACL,KAAK;wBACD,oBAAoB,CAAA,GAAA,oNAAA,CAAA,yCAAsC,AAAD,EAAE;wBAC3D;oBACJ,KAAK;wBACD,oBAAoB,CAAA,GAAA,oNAAA,CAAA,oCAAiC,AAAD,EAAE;wBACtD;oBACJ;wBACI,MAAM,CAAC,aAAa,EAAE,QAAQ,IAAI,EAAE;wBACpC;gBACR;gBACA,SAAS,IAAI,CAAC;YAClB;QACJ;QACA,OAAO,MAAM,CAAC,MAAM,KAAK,EAAE,OAAO,CAAC,CAAC;YAChC,IAAI,CAAC,MAAM;gBACP;YACJ;YACA,SAAS,IAAI,CAAC,CAAA,GAAA,oNAAA,CAAA,oCAAiC,AAAD,EAAE;QACpD;QACA,OAAO,MAAM,CAAC,MAAM,MAAM,EAAE,OAAO,CAAC,CAAC;YACjC,IAAI,CAAC,OAAO;gBACR;YACJ;YACA,MAAM,oBAAoB,CAAA,GAAA,oNAAA,CAAA,qCAAkC,AAAD,EAAE;YAC7D,SAAS,IAAI,CAAC;QAClB;QACA,OAAO,MAAM,CAAC,MAAM,IAAI,EAAE,OAAO,CAAC,CAAC;YAC/B,MAAM,oBAAoB,CAAA,GAAA,oNAAA,CAAA,oCAAiC,AAAD,EAAE;YAC5D,SAAS,IAAI,CAAC;QAClB;QACA,OAAO,MAAM,CAAC,MAAM,UAAU,EAAE,OAAO,CAAC,CAAC;YACrC,MAAM,WAAW,OAAO,IAAI,CAAC,UAAU,OAAO;YAC9C,MAAM,WAAW;mBAAI;aAAS;YAC9B,MAAM,gBAAgB;mBAAI,MAAM,KAAK;mBAAK,MAAM,MAAM;mBAAK,MAAM,IAAI;aAAC;YACtE,SAAS,OAAO,CAAC,CAAC;gBACd,MAAM,WAAW,cACZ,MAAM,CAAC,CAAC,MAAQ,IAAI,QAAQ,IAAI,IAAI,QAAQ,CAAC,OAAO,KAAK,SACzD,GAAG,CAAC,CAAC,MAAQ,IAAI,EAAE;gBACxB,IAAI,SAAS,MAAM,EAAE;oBACjB,SAAS,IAAI,IAAI;gBACrB;YACJ;YACA,MAAM,QAAQ;gBACV,MAAM;gBACN,IAAI,CAAA,GAAA,4NAAA,CAAA,SAAM,AAAD;gBACT,MAAM,UAAU,EAAE;gBAClB;YACJ;YACA,SAAS,IAAI,CAAC;QAClB;QACA,OAAO;YAAE;QAAS;IACtB;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1311, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/graphToExcalidraw.js"],"sourcesContent":["import { FlowchartToExcalidrawSkeletonConverter } from \"./converter/types/flowchart.js\";\nimport { GraphImageConverter } from \"./converter/types/graphImage.js\";\nimport { SequenceToExcalidrawSkeletonConvertor } from \"./converter/types/sequence.js\";\nimport { classToExcalidrawSkeletonConvertor } from \"./converter/types/class.js\";\nexport const graphToExcalidraw = (graph, options = {}) => {\n    switch (graph.type) {\n        case \"graphImage\": {\n            return GraphImageConverter.convert(graph, options);\n        }\n        case \"flowchart\": {\n            return FlowchartToExcalidrawSkeletonConverter.convert(graph, options);\n        }\n        case \"sequence\": {\n            return SequenceToExcalidrawSkeletonConvertor.convert(graph, options);\n        }\n        case \"class\": {\n            return classToExcalidrawSkeletonConvertor.convert(graph, options);\n        }\n        default: {\n            throw new Error(`graphToExcalidraw: unknown graph type \"${graph.type}, only flowcharts are supported!\"`);\n        }\n    }\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AACO,MAAM,oBAAoB,CAAC,OAAO,UAAU,CAAC,CAAC;IACjD,OAAQ,MAAM,IAAI;QACd,KAAK;YAAc;gBACf,OAAO,0MAAA,CAAA,sBAAmB,CAAC,OAAO,CAAC,OAAO;YAC9C;QACA,KAAK;YAAa;gBACd,OAAO,yMAAA,CAAA,yCAAsC,CAAC,OAAO,CAAC,OAAO;YACjE;QACA,KAAK;YAAY;gBACb,OAAO,wMAAA,CAAA,wCAAqC,CAAC,OAAO,CAAC,OAAO;YAChE;QACA,KAAK;YAAS;gBACV,OAAO,qMAAA,CAAA,qCAAkC,CAAC,OAAO,CAAC,OAAO;YAC7D;QACA;YAAS;gBACL,MAAM,IAAI,MAAM,CAAC,uCAAuC,EAAE,MAAM,IAAI,CAAC,iCAAiC,CAAC;YAC3G;IACJ;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1346, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1352, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/utils.js"],"sourcesContent":["// Convert mermaid entity codes to text e.g. \"#9829;\" to \"♥\"\nexport const entityCodesToText = (input) => {\n    input = decodeEntities(input);\n    // Append & before the pattern #(\\d+); or #([a-z]+); to convert to decimal code\n    // so it can be rendered as html character\n    // eg #9829; => &#9829;\n    const inputWithDecimalCode = input\n        .replace(/#(\\d+);/g, \"&#$1;\")\n        .replace(/#([a-z]+);/g, \"&$1;\");\n    // Render the decimal code as html character, eg &#9829; => ♥\n    const element = document.createElement(\"textarea\");\n    element.innerHTML = inputWithDecimalCode;\n    return element.value;\n};\nexport const getTransformAttr = (el) => {\n    const transformAttr = el.getAttribute(\"transform\");\n    const translateMatch = transformAttr?.match(/translate\\(([ \\d.-]+),\\s*([\\d.-]+)\\)/);\n    let transformX = 0;\n    let transformY = 0;\n    if (translateMatch) {\n        transformX = Number(translateMatch[1]);\n        transformY = Number(translateMatch[2]);\n    }\n    return { transformX, transformY };\n};\n//TODO Once fixed in mermaid this will be removed\nexport const encodeEntities = (text) => {\n    let txt = text;\n    txt = txt.replace(/style.*:\\S*#.*;/g, (s) => {\n        return s.substring(0, s.length - 1);\n    });\n    txt = txt.replace(/classDef.*:\\S*#.*;/g, (s) => {\n        return s.substring(0, s.length - 1);\n    });\n    txt = txt.replace(/#\\w+;/g, (s) => {\n        const innerTxt = s.substring(1, s.length - 1);\n        const isInt = /^\\+?\\d+$/.test(innerTxt);\n        if (isInt) {\n            return `ﬂ°°${innerTxt}¶ß`;\n        }\n        return `ﬂ°${innerTxt}¶ß`;\n    });\n    return txt;\n};\nexport const decodeEntities = function (text) {\n    return text.replace(/ﬂ°°/g, \"#\").replace(/ﬂ°/g, \"&\").replace(/¶ß/g, \";\");\n};\n// Compute edge postion start, end and points (reflection points)\nexport const computeEdgePositions = (pathElement, offset = { x: 0, y: 0 }) => {\n    // Check if the element is a path else throw an error\n    if (pathElement.tagName.toLowerCase() !== \"path\") {\n        throw new Error(`Invalid input: Expected an HTMLElement of tag \"path\", got ${pathElement.tagName}`);\n    }\n    // Get the d attribute from the path element else throw an error\n    const dAttr = pathElement.getAttribute(\"d\");\n    if (!dAttr) {\n        throw new Error('Path element does not contain a \"d\" attribute');\n    }\n    // Split the d attribute based on M (Move To) and L (Line To) commands\n    // eg \"M29.383,38.5L29.383,63.5L29.383,83.2\" => [\"M29.383,38.5\", \"L29.383,63.5\", \"L29.383,83.2\"]\n    const commands = dAttr.split(/(?=[LM])/);\n    // Get the start position from the first commands element => [29.383,38.5]\n    const startPosition = commands[0]\n        .substring(1)\n        .split(\",\")\n        .map((coord) => parseFloat(coord));\n    // Get the last position from the last commands element => [29.383,83.2]\n    const endPosition = commands[commands.length - 1]\n        .substring(1)\n        .split(\",\")\n        .map((coord) => parseFloat(coord));\n    // compute the reflection points -> [ {x: 29.383, y: 38.5}, {x: 29.383, y: 83.2} ]\n    // These includes the start and end points and also points which are not the same as the previous points\n    const reflectionPoints = commands\n        .map((command) => {\n        const coords = command\n            .substring(1)\n            .split(\",\")\n            .map((coord) => parseFloat(coord));\n        return { x: coords[0], y: coords[1] };\n    })\n        .filter((point, index, array) => {\n        // Always include the last point\n        if (index === 0 || index === array.length - 1) {\n            return true;\n        }\n        // Exclude the points which are the same as the previous point\n        if (point.x === array[index - 1].x && point.y === array[index - 1].y) {\n            return false;\n        }\n        // The below check is exclusively for second last point\n        if (index === array.length - 2 &&\n            (array[index - 1].x === point.x || array[index - 1].y === point.y)) {\n            const lastPoint = array[array.length - 1];\n            // Get the distance between the last point and second last point using Euclidean distance formula\n            const distance = Math.hypot(lastPoint.x - point.x, lastPoint.y - point.y);\n            // Include the second last point if the distance between the\n            // last point and second last point is > 20.\n            // This is to ensure we have a distance for render the edge.\n            // 20 seems to be a good enough distance to render the edge\n            return distance > 20;\n        }\n        // Always include if the current point is not the same as the previous point\n        return point.x !== array[index - 1].x || point.y !== array[index - 1].y;\n    })\n        .map((p) => {\n        // Offset the point by the provided offset\n        return {\n            x: p.x + offset.x,\n            y: p.y + offset.y,\n        };\n    });\n    // Return the edge positions\n    return {\n        startX: startPosition[0] + offset.x,\n        startY: startPosition[1] + offset.y,\n        endX: endPosition[0] + offset.x,\n        endY: endPosition[1] + offset.y,\n        reflectionPoints,\n    };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1472, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1478, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/parser/flowchart.js"],"sourcesContent":["import { computeEdgePositions, entityCodesToText, getTransformAttr, } from \"../utils.js\";\nconst parseSubGraph = (data, containerEl) => {\n    // Extract only node id for better reference\n    // e.g. full element id = \"flowchart-c1-205\" will map to \"c1\"\n    const nodeIds = data.nodes.map((n) => {\n        if (n.startsWith(\"flowchart-\")) {\n            return n.split(\"-\")[1];\n        }\n        return n;\n    });\n    // Get position\n    const el = containerEl.querySelector(`[id='${data.id}']`);\n    if (!el) {\n        throw new Error(\"SubGraph element not found\");\n    }\n    const position = computeElementPosition(el, containerEl);\n    // Get dimension\n    const boundingBox = el.getBBox();\n    const dimension = {\n        width: boundingBox.width,\n        height: boundingBox.height,\n    };\n    // Remove irrelevant properties\n    data.classes = undefined;\n    data.dir = undefined;\n    return {\n        ...data,\n        nodeIds,\n        ...position,\n        ...dimension,\n        text: entityCodesToText(data.title),\n    };\n};\nconst parseVertex = (data, containerEl) => {\n    // Find Vertex element\n    const el = containerEl.querySelector(`[id*=\"flowchart-${data.id}-\"]`);\n    if (!el) {\n        return undefined;\n    }\n    // Check if Vertex attached with link\n    let link;\n    if (el.parentElement?.tagName.toLowerCase() === \"a\") {\n        link = el.parentElement.getAttribute(\"xlink:href\");\n    }\n    // Get position\n    const position = computeElementPosition(link ? el.parentElement : el, containerEl);\n    // Get dimension\n    const boundingBox = el.getBBox();\n    const dimension = {\n        width: boundingBox.width,\n        height: boundingBox.height,\n    };\n    // Extract style\n    const labelContainerStyleText = el\n        .querySelector(\".label-container\")\n        ?.getAttribute(\"style\");\n    const labelStyleText = el.querySelector(\".label\")?.getAttribute(\"style\");\n    const containerStyle = {};\n    labelContainerStyleText?.split(\";\").forEach((property) => {\n        if (!property) {\n            return;\n        }\n        const key = property.split(\":\")[0].trim();\n        const value = property.split(\":\")[1].trim();\n        containerStyle[key] = value;\n    });\n    const labelStyle = {};\n    labelStyleText?.split(\";\").forEach((property) => {\n        if (!property) {\n            return;\n        }\n        const key = property.split(\":\")[0].trim();\n        const value = property.split(\":\")[1].trim();\n        labelStyle[key] = value;\n    });\n    return {\n        id: data.id,\n        labelType: data.labelType,\n        text: entityCodesToText(data.text),\n        type: data.type,\n        link: link || undefined,\n        ...position,\n        ...dimension,\n        containerStyle,\n        labelStyle,\n    };\n};\nconst parseEdge = (data, edgeIndex, containerEl) => {\n    // Find edge element\n    const edge = containerEl.querySelector(`[id*=\"L-${data.start}-${data.end}-${edgeIndex}\"]`);\n    if (!edge) {\n        throw new Error(\"Edge element not found\");\n    }\n    // Compute edge position data\n    const position = computeElementPosition(edge, containerEl);\n    const edgePositionData = computeEdgePositions(edge, position);\n    // Remove irrelevant properties\n    data.length = undefined;\n    return {\n        ...data,\n        ...edgePositionData,\n        text: entityCodesToText(data.text),\n    };\n};\n// Compute element position\nconst computeElementPosition = (el, containerEl) => {\n    if (!el) {\n        throw new Error(\"Element not found\");\n    }\n    let root = el.parentElement?.parentElement;\n    const childElement = el.childNodes[0];\n    let childPosition = { x: 0, y: 0 };\n    if (childElement) {\n        const { transformX, transformY } = getTransformAttr(childElement);\n        const boundingBox = childElement.getBBox();\n        childPosition = {\n            x: Number(childElement.getAttribute(\"x\")) ||\n                transformX + boundingBox.x ||\n                0,\n            y: Number(childElement.getAttribute(\"y\")) ||\n                transformY + boundingBox.y ||\n                0,\n        };\n    }\n    const { transformX, transformY } = getTransformAttr(el);\n    const position = {\n        x: transformX + childPosition.x,\n        y: transformY + childPosition.y,\n    };\n    while (root && root.id !== containerEl.id) {\n        if (root.classList.value === \"root\" && root.hasAttribute(\"transform\")) {\n            const { transformX, transformY } = getTransformAttr(root);\n            position.x += transformX;\n            position.y += transformY;\n        }\n        root = root.parentElement;\n    }\n    return position;\n};\nexport const parseMermaidFlowChartDiagram = (diagram, containerEl) => {\n    // This does some cleanup and initialization making sure\n    // diagram is parsed correctly. Useful when multiple diagrams are\n    // parsed together one after another, eg in playground\n    // https://github.com/mermaid-js/mermaid/blob/e561cbd3be2a93b8bedfa4839484966faad92ccf/packages/mermaid/src/Diagram.ts#L43\n    diagram.parse();\n    // Get mermaid parsed data from parser shared variable `yy`\n    //@ts-ignore\n    const mermaidParser = diagram.parser.yy;\n    const vertices = mermaidParser.getVertices();\n    Object.keys(vertices).forEach((id) => {\n        vertices[id] = parseVertex(vertices[id], containerEl);\n    });\n    // Track the count of edges based on the edge id\n    const edgeCountMap = new Map();\n    const edges = mermaidParser\n        .getEdges()\n        .filter((edge) => {\n        // Sometimes mermaid parser returns edges which are not present in the DOM hence this is a safety check to only consider edges present in the DOM, issue - https://github.com/mermaid-js/mermaid/issues/5516\n        return containerEl.querySelector(`[id*=\"L-${edge.start}-${edge.end}\"]`);\n    })\n        .map((data) => {\n        const edgeId = `${data.start}-${data.end}`;\n        const count = edgeCountMap.get(edgeId) || 0;\n        edgeCountMap.set(edgeId, count + 1);\n        return parseEdge(data, count, containerEl);\n    });\n    const subGraphs = mermaidParser\n        .getSubGraphs()\n        .map((data) => parseSubGraph(data, containerEl));\n    return {\n        type: \"flowchart\",\n        subGraphs,\n        vertices,\n        edges,\n    };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1650, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1656, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/elementSkeleton.js"],"sourcesContent":["import { entityCodesToText } from \"./utils.js\";\nimport { DEFAULT_FONT_SIZE } from \"./constants.js\";\nexport const createArrowSkeletonFromSVG = (arrowNode, opts) => {\n    const arrow = {};\n    if (opts?.label) {\n        arrow.label = { text: entityCodesToText(opts.label), fontSize: 16 };\n    }\n    const tagName = arrowNode.tagName;\n    if (tagName === \"line\") {\n        arrow.startX = Number(arrowNode.getAttribute(\"x1\"));\n        arrow.startY = Number(arrowNode.getAttribute(\"y1\"));\n        arrow.endX = Number(arrowNode.getAttribute(\"x2\"));\n        arrow.endY = Number(arrowNode.getAttribute(\"y2\"));\n    }\n    else if (tagName === \"path\") {\n        const dAttr = arrowNode.getAttribute(\"d\");\n        if (!dAttr) {\n            throw new Error('Path element does not contain a \"d\" attribute');\n        }\n        // Split the d attribute based on M (Move To)  and C (Curve) commands\n        const commands = dAttr.split(/(?=[LC])/);\n        const startPosition = commands[0]\n            .substring(1)\n            .split(\",\")\n            .map((coord) => parseFloat(coord));\n        const points = [];\n        commands.forEach((command) => {\n            const currPoints = command\n                .substring(1)\n                .trim()\n                .split(\" \")\n                .map((pos) => {\n                const [x, y] = pos.split(\",\");\n                return [\n                    parseFloat(x) - startPosition[0],\n                    parseFloat(y) - startPosition[1],\n                ];\n            });\n            points.push(...currPoints);\n        });\n        const endPosition = points[points.length - 1];\n        arrow.startX = startPosition[0];\n        arrow.startY = startPosition[1];\n        arrow.endX = endPosition[0];\n        arrow.endY = endPosition[1];\n        arrow.points = points;\n    }\n    if (opts?.label) {\n        // In mermaid the text is positioned above arrow but in Excalidraw\n        // its postioned on the arrow hence the elements below it might look cluttered so shifting the arrow by an offset of 10px\n        const offset = 10;\n        arrow.startY = arrow.startY - offset;\n        arrow.endY = arrow.endY - offset;\n    }\n    arrow.strokeColor = arrowNode.getAttribute(\"stroke\");\n    arrow.strokeWidth = Number(arrowNode.getAttribute(\"stroke-width\"));\n    arrow.type = \"arrow\";\n    arrow.strokeStyle = opts?.strokeStyle || \"solid\";\n    arrow.startArrowhead = opts?.startArrowhead || null;\n    arrow.endArrowhead = opts?.endArrowhead || null;\n    return arrow;\n};\nexport const createArrowSkeletion = (startX, startY, endX, endY, opts) => {\n    const arrow = {};\n    arrow.type = \"arrow\";\n    arrow.startX = startX;\n    arrow.startY = startY;\n    arrow.endX = endX;\n    arrow.endY = endY;\n    Object.assign(arrow, { ...opts });\n    return arrow;\n};\nexport const createTextSkeleton = (x, y, text, opts) => {\n    const textElement = {\n        type: \"text\",\n        x,\n        y,\n        text,\n        width: opts?.width || 20,\n        height: opts?.height || 20,\n        fontSize: opts?.fontSize || DEFAULT_FONT_SIZE,\n        id: opts?.id,\n        groupId: opts?.groupId,\n        metadata: opts?.metadata,\n    };\n    return textElement;\n};\nexport const createTextSkeletonFromSVG = (textNode, text, opts) => {\n    const node = {};\n    const x = Number(textNode.getAttribute(\"x\"));\n    const y = Number(textNode.getAttribute(\"y\"));\n    node.type = \"text\";\n    node.text = entityCodesToText(text);\n    if (opts?.id) {\n        node.id = opts.id;\n    }\n    if (opts?.groupId) {\n        node.groupId = opts.groupId;\n    }\n    const boundingBox = textNode.getBBox();\n    node.width = boundingBox.width;\n    node.height = boundingBox.height;\n    node.x = x - boundingBox.width / 2;\n    node.y = y;\n    const fontSize = parseInt(getComputedStyle(textNode).fontSize);\n    node.fontSize = fontSize;\n    return node;\n};\nexport const createContainerSkeletonFromSVG = (node, type, opts = {}) => {\n    const container = {};\n    container.type = type;\n    const { label, subtype, id, groupId } = opts;\n    container.id = id;\n    if (groupId) {\n        container.groupId = groupId;\n    }\n    if (label) {\n        container.label = {\n            text: entityCodesToText(label.text),\n            fontSize: 16,\n            verticalAlign: label?.verticalAlign,\n        };\n    }\n    const boundingBox = node.getBBox();\n    container.x = boundingBox.x;\n    container.y = boundingBox.y;\n    container.width = boundingBox.width;\n    container.height = boundingBox.height;\n    container.subtype = subtype;\n    switch (subtype) {\n        case \"highlight\":\n            const bgColor = node.getAttribute(\"fill\");\n            if (bgColor) {\n                container.bgColor = bgColor;\n            }\n            break;\n        case \"note\":\n            container.strokeStyle = \"dashed\";\n            break;\n    }\n    return container;\n};\nexport const createLineSkeletonFromSVG = (lineNode, startX, startY, endX, endY, opts) => {\n    const line = {};\n    line.startX = startX;\n    line.startY = startY;\n    line.endX = endX;\n    if (opts?.groupId) {\n        line.groupId = opts.groupId;\n    }\n    if (opts?.id) {\n        line.id = opts.id;\n    }\n    // Make sure lines don't overlap with the nodes, in mermaid it overlaps but isn't visible as its pushed back and containers are non transparent\n    line.endY = endY;\n    line.strokeColor = lineNode.getAttribute(\"stroke\");\n    line.strokeWidth = Number(lineNode.getAttribute(\"stroke-width\"));\n    line.type = \"line\";\n    return line;\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 1823, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1829, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/parser/sequence.js"],"sourcesContent":["import { SVG_TO_SHAPE_MAPPER } from \"../constants.js\";\nimport { nanoid } from \"nanoid\";\nimport { createArrowSkeletonFromSVG, createContainerSkeletonFromSVG, createLineSkeletonFromSVG, createTextSkeletonFromSVG, } from \"../elementSkeleton.js\";\n// Currently mermaid supported these 6 arrow types, the names are taken from mermaidParser.LINETYPE\nconst SEQUENCE_ARROW_TYPES = {\n    0: \"SOLID\",\n    1: \"DOTTED\",\n    3: \"SOLID_CROSS\",\n    4: \"DOTTED_CROSS\",\n    5: \"SOLID_OPEN\",\n    6: \"DOTTED_OPEN\",\n    24: \"SOLID_POINT\",\n    25: \"DOTTED_POINT\",\n};\nconst MESSAGE_TYPE = {\n    SOLID: 0,\n    DOTTED: 1,\n    NOTE: 2,\n    SOLID_CROSS: 3,\n    DOTTED_CROSS: 4,\n    SOLID_OPEN: 5,\n    DOTTED_OPEN: 6,\n    LOOP_START: 10,\n    LOOP_END: 11,\n    ALT_START: 12,\n    ALT_ELSE: 13,\n    ALT_END: 14,\n    OPT_START: 15,\n    OPT_END: 16,\n    ACTIVE_START: 17,\n    ACTIVE_END: 18,\n    PAR_START: 19,\n    PAR_AND: 20,\n    PAR_END: 21,\n    RECT_START: 22,\n    RECT_END: 23,\n    SOLID_POINT: 24,\n    DOTTED_POINT: 25,\n    AUTONUMBER: 26,\n    CRITICAL_START: 27,\n    CRITICAL_OPTION: 28,\n    CRITICAL_END: 29,\n    BREAK_START: 30,\n    BREAK_END: 31,\n    PAR_OVER_START: 32,\n};\nconst getStrokeStyle = (type) => {\n    let strokeStyle;\n    switch (type) {\n        case MESSAGE_TYPE.SOLID:\n        case MESSAGE_TYPE.SOLID_CROSS:\n        case MESSAGE_TYPE.SOLID_OPEN:\n        case MESSAGE_TYPE.SOLID_POINT:\n            strokeStyle = \"solid\";\n            break;\n        case MESSAGE_TYPE.DOTTED:\n        case MESSAGE_TYPE.DOTTED_CROSS:\n        case MESSAGE_TYPE.DOTTED_OPEN:\n        case MESSAGE_TYPE.DOTTED_POINT:\n            strokeStyle = \"dotted\";\n            break;\n        default:\n            strokeStyle = \"solid\";\n            break;\n    }\n    return strokeStyle;\n};\nconst attachSequenceNumberToArrow = (node, arrow) => {\n    const showSequenceNumber = !!node.nextElementSibling?.classList.contains(\"sequenceNumber\");\n    if (showSequenceNumber) {\n        const text = node.nextElementSibling?.textContent;\n        if (!text) {\n            throw new Error(\"sequence number not present\");\n        }\n        const height = 30;\n        const yOffset = height / 2;\n        const xOffset = 10;\n        const sequenceNumber = {\n            type: \"rectangle\",\n            x: arrow.startX - xOffset,\n            y: arrow.startY - yOffset,\n            label: { text, fontSize: 14 },\n            bgColor: \"#e9ecef\",\n            height,\n            subtype: \"sequence\",\n        };\n        Object.assign(arrow, { sequenceNumber });\n    }\n};\nconst createActorSymbol = (rootNode, text, opts) => {\n    if (!rootNode) {\n        throw \"root node not found\";\n    }\n    const groupId = nanoid();\n    const children = Array.from(rootNode.children);\n    const nodeElements = [];\n    children.forEach((child, index) => {\n        const id = `${opts?.id}-${index}`;\n        let ele;\n        switch (child.tagName) {\n            case \"line\":\n                const startX = Number(child.getAttribute(\"x1\"));\n                const startY = Number(child.getAttribute(\"y1\"));\n                const endX = Number(child.getAttribute(\"x2\"));\n                const endY = Number(child.getAttribute(\"y2\"));\n                ele = createLineSkeletonFromSVG(child, startX, startY, endX, endY, { groupId, id });\n                break;\n            case \"text\":\n                ele = createTextSkeletonFromSVG(child, text, {\n                    groupId,\n                    id,\n                });\n                break;\n            case \"circle\":\n                ele = createContainerSkeletonFromSVG(child, \"ellipse\", {\n                    label: child.textContent ? { text: child.textContent } : undefined,\n                    groupId,\n                    id,\n                });\n            default:\n                ele = createContainerSkeletonFromSVG(child, SVG_TO_SHAPE_MAPPER[child.tagName], {\n                    label: child.textContent ? { text: child.textContent } : undefined,\n                    groupId,\n                    id,\n                });\n        }\n        nodeElements.push(ele);\n    });\n    return nodeElements;\n};\nconst parseActor = (actors, containerEl) => {\n    const actorTopNodes = Array.from(containerEl.querySelectorAll(\".actor-top\"));\n    const actorBottomNodes = Array.from(containerEl.querySelectorAll(\".actor-bottom\"));\n    const nodes = [];\n    const lines = [];\n    Object.values(actors).forEach((actor, index) => {\n        const topRootNode = actorTopNodes.find((actorNode) => actorNode.getAttribute(\"name\") === actor.name);\n        const bottomRootNode = actorBottomNodes.find((actorNode) => actorNode.getAttribute(\"name\") === actor.name);\n        if (!topRootNode || !bottomRootNode) {\n            throw \"root not found\";\n        }\n        const text = actor.description;\n        if (actor.type === \"participant\") {\n            // creating top actor node element\n            const topNodeElement = createContainerSkeletonFromSVG(topRootNode, \"rectangle\", { id: `${actor.name}-top`, label: { text }, subtype: \"actor\" });\n            if (!topNodeElement) {\n                throw \"Top Node element not found!\";\n            }\n            nodes.push([topNodeElement]);\n            // creating bottom actor node element\n            const bottomNodeElement = createContainerSkeletonFromSVG(bottomRootNode, \"rectangle\", { id: `${actor.name}-bottom`, label: { text }, subtype: \"actor\" });\n            nodes.push([bottomNodeElement]);\n            // Get the line connecting the top and bottom nodes. As per the DOM, the line is rendered as sibling parent of top root node\n            const lineNode = topRootNode?.parentElement\n                ?.previousElementSibling;\n            if (lineNode?.tagName !== \"line\") {\n                throw \"Line not found\";\n            }\n            const startX = Number(lineNode.getAttribute(\"x1\"));\n            if (!topNodeElement.height) {\n                throw \"Top node element height is null\";\n            }\n            const startY = topNodeElement.y + topNodeElement.height;\n            // Make sure lines don't overlap with the nodes, in mermaid it overlaps but isn't visible as its pushed back and containers are non transparent\n            const endY = bottomNodeElement.y;\n            const endX = Number(lineNode.getAttribute(\"x2\"));\n            const line = createLineSkeletonFromSVG(lineNode, startX, startY, endX, endY);\n            lines.push(line);\n        }\n        else if (actor.type === \"actor\") {\n            const topNodeElement = createActorSymbol(topRootNode, text, {\n                id: `${actor.name}-top`,\n            });\n            nodes.push(topNodeElement);\n            const bottomNodeElement = createActorSymbol(bottomRootNode, text, {\n                id: `${actor.name}-bottom`,\n            });\n            nodes.push(bottomNodeElement);\n            // Get the line connecting the top and bottom nodes. As per the DOM, the line is rendered as sibling of the actor root element\n            const lineNode = topRootNode.previousElementSibling;\n            if (lineNode?.tagName !== \"line\") {\n                throw \"Line not found\";\n            }\n            const startX = Number(lineNode.getAttribute(\"x1\"));\n            const startY = Number(lineNode.getAttribute(\"y1\"));\n            const endX = Number(lineNode.getAttribute(\"x2\"));\n            // Make sure lines don't overlap with the nodes, in mermaid it overlaps but isn't visible as its pushed back and containers are non transparent\n            const bottomEllipseNode = bottomNodeElement.find((node) => node.type === \"ellipse\");\n            if (bottomEllipseNode) {\n                const endY = bottomEllipseNode.y;\n                const line = createLineSkeletonFromSVG(lineNode, startX, startY, endX, endY);\n                lines.push(line);\n            }\n        }\n    });\n    return { nodes, lines };\n};\nconst computeArrows = (messages, containerEl) => {\n    const arrows = [];\n    const arrowNodes = Array.from(containerEl.querySelectorAll('[class*=\"messageLine\"]'));\n    const supportedMessageTypes = Object.keys(SEQUENCE_ARROW_TYPES);\n    const arrowMessages = messages.filter((message) => supportedMessageTypes.includes(message.type.toString()));\n    arrowNodes.forEach((arrowNode, index) => {\n        const message = arrowMessages[index];\n        const messageType = SEQUENCE_ARROW_TYPES[message.type];\n        const arrow = createArrowSkeletonFromSVG(arrowNode, {\n            label: message?.message,\n            strokeStyle: getStrokeStyle(message.type),\n            endArrowhead: messageType === \"SOLID_OPEN\" || messageType === \"DOTTED_OPEN\"\n                ? null\n                : \"arrow\",\n        });\n        attachSequenceNumberToArrow(arrowNode, arrow);\n        arrows.push(arrow);\n    });\n    return arrows;\n};\nconst computeNotes = (messages, containerEl) => {\n    const noteNodes = Array.from(containerEl.querySelectorAll(\".note\")).map((node) => node.parentElement);\n    const noteText = messages.filter((message) => message.type === MESSAGE_TYPE.NOTE);\n    const notes = [];\n    noteNodes.forEach((node, index) => {\n        if (!node) {\n            return;\n        }\n        const rect = node.firstChild;\n        const text = noteText[index].message;\n        const note = createContainerSkeletonFromSVG(rect, \"rectangle\", {\n            label: { text },\n            subtype: \"note\",\n        });\n        notes.push(note);\n    });\n    return notes;\n};\nconst parseActivations = (containerEl) => {\n    const activationNodes = Array.from(containerEl.querySelectorAll(`[class*=activation]`));\n    const activations = [];\n    activationNodes.forEach((node) => {\n        const rect = createContainerSkeletonFromSVG(node, \"rectangle\", {\n            label: { text: \"\" },\n            subtype: \"activation\",\n        });\n        activations.push(rect);\n    });\n    return activations;\n};\nconst parseLoops = (messages, containerEl) => {\n    const lineNodes = Array.from(containerEl.querySelectorAll(\".loopLine\"));\n    const lines = [];\n    const texts = [];\n    const nodes = [];\n    lineNodes.forEach((node) => {\n        const startX = Number(node.getAttribute(\"x1\"));\n        const startY = Number(node.getAttribute(\"y1\"));\n        const endX = Number(node.getAttribute(\"x2\"));\n        const endY = Number(node.getAttribute(\"y2\"));\n        const line = createLineSkeletonFromSVG(node, startX, startY, endX, endY);\n        line.strokeStyle = \"dotted\";\n        line.strokeColor = \"#adb5bd\";\n        line.strokeWidth = 2;\n        lines.push(line);\n    });\n    const loopTextNodes = Array.from(containerEl.querySelectorAll(\".loopText\"));\n    const criticalMessages = messages\n        .filter((message) => message.type === MESSAGE_TYPE.CRITICAL_START)\n        .map((message) => message.message);\n    loopTextNodes.forEach((node) => {\n        const text = node.textContent || \"\";\n        const textElement = createTextSkeletonFromSVG(node, text);\n        // The text is rendered between [ ] in DOM hence getting the text excluding the [ ]\n        const rawText = text.match(/\\[(.*?)\\]/)?.[1] || \"\";\n        const isCritical = criticalMessages.includes(rawText);\n        // For critical label the coordinates are not accurate in mermaid as there is\n        // no padding left hence shifting the text next to critical label by 16px (font size)\n        if (isCritical) {\n            textElement.x += 16;\n        }\n        texts.push(textElement);\n    });\n    const labelBoxes = Array.from(containerEl?.querySelectorAll(\".labelBox\"));\n    const labelTextNode = Array.from(containerEl?.querySelectorAll(\".labelText\"));\n    labelBoxes.forEach((labelBox, index) => {\n        const text = labelTextNode[index]?.textContent || \"\";\n        const container = createContainerSkeletonFromSVG(labelBox, \"rectangle\", {\n            label: { text },\n        });\n        container.strokeColor = \"#adb5bd\";\n        container.bgColor = \"#e9ecef\";\n        // So width is calculated based on label\n        container.width = undefined;\n        nodes.push(container);\n    });\n    return { lines, texts, nodes };\n};\nconst computeHighlights = (containerEl) => {\n    const rects = Array.from(containerEl.querySelectorAll(\".rect\"))\n        // Only drawing specifically for highlights as the same selector is for grouping as well. For grouping we\n        // draw it ourselves\n        .filter((node) => node.parentElement?.tagName !== \"g\");\n    const nodes = [];\n    rects.forEach((rect) => {\n        const node = createContainerSkeletonFromSVG(rect, \"rectangle\", {\n            label: { text: \"\" },\n            subtype: \"highlight\",\n        });\n        nodes.push(node);\n    });\n    return nodes;\n};\nexport const parseMermaidSequenceDiagram = (diagram, containerEl) => {\n    diagram.parse();\n    // Get mermaid parsed data from parser shared variable `yy`\n    //@ts-ignore\n    const mermaidParser = diagram.parser.yy;\n    const nodes = [];\n    const groups = mermaidParser.getBoxes();\n    const bgHightlights = computeHighlights(containerEl);\n    const actorData = mermaidParser.getActors();\n    const { nodes: actors, lines } = parseActor(actorData, containerEl);\n    const messages = mermaidParser.getMessages();\n    const arrows = computeArrows(messages, containerEl);\n    const notes = computeNotes(messages, containerEl);\n    const activations = parseActivations(containerEl);\n    const loops = parseLoops(messages, containerEl);\n    nodes.push(bgHightlights);\n    nodes.push(...actors);\n    nodes.push(notes);\n    nodes.push(activations);\n    return { type: \"sequence\", lines, arrows, nodes, loops, groups };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2209, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2215, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/parser/class.js"],"sourcesContent":["import { nanoid } from \"nanoid\";\nimport { computeEdgePositions, getTransformAttr } from \"../utils.js\";\nimport { createArrowSkeletion, createContainerSkeletonFromSVG, createLineSkeletonFromSVG, createTextSkeleton, } from \"../elementSkeleton.js\";\n// Taken from mermaidParser.relationType\nconst RELATION_TYPE = {\n    AGGREGATION: 0,\n    EXTENSION: 1,\n    COMPOSITION: 2,\n    DEPENDENCY: 3,\n    LOLLIPOP: 4,\n};\n// Taken from mermaidParser.lineType\nconst LINE_TYPE = {\n    LINE: 0,\n    DOTTED_LINE: 1,\n};\n// This is the offset to update the arrow head postition for rendering in excalidraw as mermaid calculates the position until the start of arrowhead\nconst MERMAID_ARROW_HEAD_OFFSET = 16;\nconst getStrokeStyle = (type) => {\n    let lineType;\n    switch (type) {\n        case LINE_TYPE.LINE:\n            lineType = \"solid\";\n            break;\n        case LINE_TYPE.DOTTED_LINE:\n            lineType = \"dotted\";\n            break;\n        default:\n            lineType = \"solid\";\n    }\n    return lineType;\n};\nconst getArrowhead = (type) => {\n    let arrowhead;\n    switch (type) {\n        case RELATION_TYPE.AGGREGATION:\n            arrowhead = \"diamond_outline\";\n            break;\n        case RELATION_TYPE.COMPOSITION:\n            arrowhead = \"diamond\";\n            break;\n        case RELATION_TYPE.EXTENSION:\n            arrowhead = \"triangle_outline\";\n            break;\n        case \"none\":\n            arrowhead = null;\n            break;\n        case RELATION_TYPE.DEPENDENCY:\n        default:\n            arrowhead = \"arrow\";\n            break;\n    }\n    return arrowhead;\n};\nconst parseClasses = (classes, containerEl) => {\n    const nodes = [];\n    const lines = [];\n    const text = [];\n    Object.values(classes).forEach((classNode) => {\n        const { domId, id: classId } = classNode;\n        const groupId = nanoid();\n        const domNode = containerEl.querySelector(`[data-id=${classId}]`);\n        if (!domNode) {\n            throw Error(`DOM Node with id ${domId} not found`);\n        }\n        const { transformX, transformY } = getTransformAttr(domNode);\n        const container = createContainerSkeletonFromSVG(domNode.firstChild, \"rectangle\", { id: classId, groupId });\n        container.x += transformX;\n        container.y += transformY;\n        container.metadata = { classId };\n        nodes.push(container);\n        const lineNodes = Array.from(domNode.querySelectorAll(\".divider\"));\n        lineNodes.forEach((lineNode) => {\n            const startX = Number(lineNode.getAttribute(\"x1\"));\n            const startY = Number(lineNode.getAttribute(\"y1\"));\n            const endX = Number(lineNode.getAttribute(\"x2\"));\n            const endY = Number(lineNode.getAttribute(\"y2\"));\n            const line = createLineSkeletonFromSVG(lineNode, startX, startY, endX, endY, {\n                groupId,\n                id: nanoid(),\n            });\n            line.startX += transformX;\n            line.startY += transformY;\n            line.endX += transformX;\n            line.endY += transformY;\n            line.metadata = { classId };\n            lines.push(line);\n        });\n        const labelNodes = domNode.querySelector(\".label\")?.children;\n        if (!labelNodes) {\n            throw \"label nodes not found\";\n        }\n        Array.from(labelNodes).forEach((node) => {\n            const label = node.textContent;\n            if (!label) {\n                return;\n            }\n            const id = nanoid();\n            const { transformX: textTransformX, transformY: textTransformY } = getTransformAttr(node);\n            const boundingBox = node.getBBox();\n            const offsetY = 10;\n            const textElement = createTextSkeleton(transformX + textTransformX, transformY + textTransformY + offsetY, label, {\n                width: boundingBox.width,\n                height: boundingBox.height,\n                id,\n                groupId,\n                metadata: { classId },\n            });\n            text.push(textElement);\n        });\n    });\n    return { nodes, lines, text };\n};\n// update arrow position by certain offset for triangle and diamond arrow head types\n// as mermaid calculates the position until the start of arrowhead\n// for reference - https://github.com/mermaid-js/mermaid/issues/5417\nconst adjustArrowPosition = (direction, arrow) => {\n    // The arrowhead shapes where we need to update the position by a 16px offset\n    const arrowHeadShapes = [\"triangle_outline\", \"diamond\", \"diamond_outline\"];\n    const shouldUpdateStartArrowhead = arrow.startArrowhead && arrowHeadShapes.includes(arrow.startArrowhead);\n    const shouldUpdateEndArrowhead = arrow.endArrowhead && arrowHeadShapes.includes(arrow.endArrowhead);\n    if (!shouldUpdateEndArrowhead && !shouldUpdateStartArrowhead) {\n        return arrow;\n    }\n    if (shouldUpdateStartArrowhead) {\n        if (direction === \"LR\") {\n            arrow.startX -= MERMAID_ARROW_HEAD_OFFSET;\n        }\n        else if (direction === \"RL\") {\n            arrow.startX += MERMAID_ARROW_HEAD_OFFSET;\n        }\n        else if (direction === \"TB\") {\n            arrow.startY -= MERMAID_ARROW_HEAD_OFFSET;\n        }\n        else if (direction === \"BT\") {\n            arrow.startY += MERMAID_ARROW_HEAD_OFFSET;\n        }\n    }\n    if (shouldUpdateEndArrowhead) {\n        if (direction === \"LR\") {\n            arrow.endX += MERMAID_ARROW_HEAD_OFFSET;\n        }\n        else if (direction === \"RL\") {\n            arrow.endX -= MERMAID_ARROW_HEAD_OFFSET;\n        }\n        else if (direction === \"TB\") {\n            arrow.endY += MERMAID_ARROW_HEAD_OFFSET;\n        }\n        else if (direction === \"BT\") {\n            arrow.endY -= MERMAID_ARROW_HEAD_OFFSET;\n        }\n    }\n    return arrow;\n};\nconst parseRelations = (relations, classNodes, containerEl, direction) => {\n    const edges = containerEl.querySelector(\".edgePaths\")?.children;\n    if (!edges) {\n        throw new Error(\"No Edges found!\");\n    }\n    const arrows = [];\n    const text = [];\n    relations.forEach((relationNode, index) => {\n        const { id1, id2, relation } = relationNode;\n        const node1 = classNodes.find((node) => node.id === id1);\n        const node2 = classNodes.find((node) => node.id === id2);\n        const strokeStyle = getStrokeStyle(relation.lineType);\n        const startArrowhead = getArrowhead(relation.type1);\n        const endArrowhead = getArrowhead(relation.type2);\n        const edgePositionData = computeEdgePositions(edges[index]);\n        const arrowSkeletion = createArrowSkeletion(edgePositionData.startX, edgePositionData.startY, edgePositionData.endX, edgePositionData.endY, {\n            strokeStyle,\n            startArrowhead,\n            endArrowhead,\n            label: relationNode.title ? { text: relationNode.title } : undefined,\n            start: { type: \"rectangle\", id: node1.id },\n            end: { type: \"rectangle\", id: node2.id },\n        });\n        const arrow = adjustArrowPosition(direction, arrowSkeletion);\n        arrows.push(arrow);\n        // Add cardianlities and Multiplicities\n        const { relationTitle1, relationTitle2 } = relationNode;\n        const offsetX = 20;\n        const offsetY = 15;\n        const directionOffset = 15;\n        let x;\n        let y;\n        if (relationTitle1 && relationTitle1 !== \"none\") {\n            switch (direction) {\n                case \"TB\":\n                    x = arrow.startX - offsetX;\n                    if (arrow.endX < arrow.startX) {\n                        x -= directionOffset;\n                    }\n                    y = arrow.startY + offsetY;\n                    break;\n                case \"BT\":\n                    x = arrow.startX + offsetX;\n                    if (arrow.endX > arrow.startX) {\n                        x += directionOffset;\n                    }\n                    y = arrow.startY - offsetY;\n                    break;\n                case \"LR\":\n                    x = arrow.startX + offsetX;\n                    y = arrow.startY + offsetY;\n                    if (arrow.endY > arrow.startY) {\n                        y += directionOffset;\n                    }\n                    break;\n                case \"RL\":\n                    x = arrow.startX - offsetX;\n                    y = arrow.startY - offsetY;\n                    if (arrow.startY > arrow.endY) {\n                        y -= directionOffset;\n                    }\n                    break;\n                default:\n                    x = arrow.startX - offsetX;\n                    y = arrow.startY + offsetY;\n            }\n            const relationTitleElement = createTextSkeleton(x, y, relationTitle1, {\n                fontSize: 16,\n            });\n            text.push(relationTitleElement);\n        }\n        if (relationTitle2 && relationTitle2 !== \"none\") {\n            switch (direction) {\n                case \"TB\":\n                    x = arrow.endX + offsetX;\n                    if (arrow.endX < arrow.startX) {\n                        x += directionOffset;\n                    }\n                    y = arrow.endY - offsetY;\n                    break;\n                case \"BT\":\n                    x = arrow.endX - offsetX;\n                    if (arrow.endX > arrow.startX) {\n                        x -= directionOffset;\n                    }\n                    y = arrow.endY + offsetY;\n                    break;\n                case \"LR\":\n                    x = arrow.endX - offsetX;\n                    y = arrow.endY - offsetY;\n                    if (arrow.endY > arrow.startY) {\n                        y -= directionOffset;\n                    }\n                    break;\n                case \"RL\":\n                    x = arrow.endX + offsetX;\n                    y = arrow.endY + offsetY;\n                    if (arrow.startY > arrow.endY) {\n                        y += directionOffset;\n                    }\n                    break;\n                default:\n                    x = arrow.endX + offsetX;\n                    y = arrow.endY - offsetY;\n            }\n            const relationTitleElement = createTextSkeleton(x, y, relationTitle2, {\n                fontSize: 16,\n            });\n            text.push(relationTitleElement);\n        }\n    });\n    return { arrows, text };\n};\nconst parseNotes = (notes, containerEl, classNodes) => {\n    const noteContainers = [];\n    const connectors = [];\n    notes.forEach((note) => {\n        const { id, text, class: classId } = note;\n        const node = containerEl.querySelector(`#${id}`);\n        if (!node) {\n            throw new Error(`Node with id ${id} not found!`);\n        }\n        const { transformX, transformY } = getTransformAttr(node);\n        const rect = node.firstChild;\n        const container = createContainerSkeletonFromSVG(rect, \"rectangle\", {\n            id,\n            subtype: \"note\",\n            label: { text },\n        });\n        Object.assign(container, {\n            x: container.x + transformX,\n            y: container.y + transformY,\n        });\n        noteContainers.push(container);\n        if (classId) {\n            const classNode = classNodes.find((node) => node.id === classId);\n            if (!classNode) {\n                throw new Error(`class node with id ${classId} not found!`);\n            }\n            const startX = container.x + (container.width || 0) / 2;\n            const startY = container.y + (container.height || 0);\n            const endX = startX;\n            const endY = classNode.y;\n            const connector = createArrowSkeletion(startX, startY, endX, endY, {\n                strokeStyle: \"dotted\",\n                startArrowhead: null,\n                endArrowhead: null,\n                start: { id: container.id, type: \"rectangle\" },\n                end: { id: classNode.id, type: \"rectangle\" },\n            });\n            connectors.push(connector);\n        }\n    });\n    return { notes: noteContainers, connectors };\n};\nexport const parseMermaidClassDiagram = (diagram, containerEl) => {\n    diagram.parse();\n    //@ts-ignore\n    const mermaidParser = diagram.parser.yy;\n    const direction = mermaidParser.getDirection();\n    const nodes = [];\n    const lines = [];\n    const text = [];\n    const classNodes = [];\n    const namespaces = mermaidParser.getNamespaces();\n    const classes = mermaidParser.getClasses();\n    if (Object.keys(classes).length) {\n        const classData = parseClasses(classes, containerEl);\n        nodes.push(classData.nodes);\n        lines.push(...classData.lines);\n        text.push(...classData.text);\n        classNodes.push(...classData.nodes);\n    }\n    const relations = mermaidParser.getRelations();\n    const { arrows, text: relationTitles } = parseRelations(relations, classNodes, containerEl, direction);\n    const { notes, connectors } = parseNotes(mermaidParser.getNotes(), containerEl, classNodes);\n    nodes.push(notes);\n    arrows.push(...connectors);\n    text.push(...relationTitles);\n    return { type: \"class\", nodes, lines, arrows, text, namespaces };\n};\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2602, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/parseMermaid.js"],"sourcesContent":["import mermaid from \"mermaid\";\nimport { MERMAID_CONFIG } from \"./constants.js\";\nimport { encodeEntities } from \"./utils.js\";\nimport { parseMermaidFlowChartDiagram } from \"./parser/flowchart.js\";\nimport { parseMermaidSequenceDiagram } from \"./parser/sequence.js\";\nimport { parseMermaidClassDiagram } from \"./parser/class.js\";\n// Fallback to Svg\nconst convertSvgToGraphImage = (svgContainer) => {\n    // Extract SVG width and height\n    // TODO: make width and height change dynamically based on user's screen dimension\n    const svgEl = svgContainer.querySelector(\"svg\");\n    if (!svgEl) {\n        throw new Error(\"SVG element not found\");\n    }\n    const rect = svgEl.getBoundingClientRect();\n    const width = rect.width;\n    const height = rect.height;\n    // Set width and height explictly since in firefox it gets set to 0\n    // if the width and height are not expilcitly set\n    // eg in some cases like er Diagram, gnatt, width and height is set as 100%\n    // which sets the dimensions as 0 in firefox and thus the diagram isn't rendered\n    svgEl.setAttribute(\"width\", `${width}`);\n    svgEl.setAttribute(\"height\", `${height}`);\n    // Convert SVG to image\n    const mimeType = \"image/svg+xml\";\n    const decoded = unescape(encodeURIComponent(svgEl.outerHTML));\n    const base64 = btoa(decoded);\n    const dataURL = `data:image/svg+xml;base64,${base64}`;\n    const graphImage = {\n        type: \"graphImage\",\n        mimeType,\n        dataURL,\n        width,\n        height,\n    };\n    return graphImage;\n};\nexport const parseMermaid = async (definition, config = MERMAID_CONFIG) => {\n    mermaid.initialize({ ...MERMAID_CONFIG, ...config });\n    // Parse the diagram\n    const diagram = await mermaid.mermaidAPI.getDiagramFromText(encodeEntities(definition));\n    // Render the SVG diagram\n    const { svg } = await mermaid.render(\"mermaid-to-excalidraw\", definition);\n    // Append Svg to DOM\n    const svgContainer = document.createElement(\"div\");\n    svgContainer.setAttribute(\"style\", `opacity: 0; position: relative; z-index: -1;`);\n    svgContainer.innerHTML = svg;\n    svgContainer.id = \"mermaid-diagram\";\n    document.body.appendChild(svgContainer);\n    let data;\n    switch (diagram.type) {\n        case \"flowchart-v2\": {\n            data = parseMermaidFlowChartDiagram(diagram, svgContainer);\n            break;\n        }\n        case \"sequence\": {\n            data = parseMermaidSequenceDiagram(diagram, svgContainer);\n            break;\n        }\n        case \"classDiagram\": {\n            data = parseMermaidClassDiagram(diagram, svgContainer);\n            break;\n        }\n        // fallback to image if diagram type not-supported\n        default: {\n            data = convertSvgToGraphImage(svgContainer);\n        }\n    }\n    svgContainer.remove();\n    return data;\n};\n"],"names":[],"mappings":";;;;;;;;AACA;AACA;AACA;AACA;AACA;;;;;;;AACA,kBAAkB;AAClB,MAAM,yBAAyB,CAAC;IAC5B,+BAA+B;IAC/B,kFAAkF;IAClF,MAAM,QAAQ,aAAa,aAAa,CAAC;IACzC,IAAI,CAAC,OAAO;QACR,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,OAAO,MAAM,qBAAqB;IACxC,MAAM,QAAQ,KAAK,KAAK;IACxB,MAAM,SAAS,KAAK,MAAM;IAC1B,mEAAmE;IACnE,iDAAiD;IACjD,2EAA2E;IAC3E,gFAAgF;IAChF,MAAM,YAAY,CAAC,SAAS,GAAG,OAAO;IACtC,MAAM,YAAY,CAAC,UAAU,GAAG,QAAQ;IACxC,uBAAuB;IACvB,MAAM,WAAW;IACjB,MAAM,UAAU,SAAS,mBAAmB,MAAM,SAAS;IAC3D,MAAM,SAAS,KAAK;IACpB,MAAM,UAAU,CAAC,0BAA0B,EAAE,QAAQ;IACrD,MAAM,aAAa;QACf,MAAM;QACN;QACA;QACA;QACA;IACJ;IACA,OAAO;AACX;AACO,MAAM,eAAe,OAAO,YAAY,SAAS,mLAAA,CAAA,iBAAc;IAClE,QAAQ,UAAU,CAAC;QAAE,GAAG,mLAAA,CAAA,iBAAc;QAAE,GAAG,MAAM;IAAC;IAClD,oBAAoB;IACpB,MAAM,UAAU,MAAM,QAAQ,UAAU,CAAC,kBAAkB,CAAC,CAAA,GAAA,+KAAA,CAAA,iBAAc,AAAD,EAAE;IAC3E,yBAAyB;IACzB,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,QAAQ,MAAM,CAAC,yBAAyB;IAC9D,oBAAoB;IACpB,MAAM,eAAe,SAAS,aAAa,CAAC;IAC5C,aAAa,YAAY,CAAC,SAAS,CAAC,4CAA4C,CAAC;IACjF,aAAa,SAAS,GAAG;IACzB,aAAa,EAAE,GAAG;IAClB,SAAS,IAAI,CAAC,WAAW,CAAC;IAC1B,IAAI;IACJ,OAAQ,QAAQ,IAAI;QAChB,KAAK;YAAgB;gBACjB,OAAO,CAAA,GAAA,6LAAA,CAAA,+BAA4B,AAAD,EAAE,SAAS;gBAC7C;YACJ;QACA,KAAK;YAAY;gBACb,OAAO,CAAA,GAAA,4LAAA,CAAA,8BAA2B,AAAD,EAAE,SAAS;gBAC5C;YACJ;QACA,KAAK;YAAgB;gBACjB,OAAO,CAAA,GAAA,yLAAA,CAAA,2BAAwB,AAAD,EAAE,SAAS;gBACzC;YACJ;QACA,kDAAkD;QAClD;YAAS;gBACL,OAAO,uBAAuB;YAClC;IACJ;IACA,aAAa,MAAM;IACnB,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2693, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2699, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/dist/index.js"],"sourcesContent":["import { DEFAULT_FONT_SIZE } from \"./constants.js\";\nimport { graphToExcalidraw } from \"./graphToExcalidraw.js\";\nimport { parseMermaid } from \"./parseMermaid.js\";\nconst parseMermaidToExcalidraw = async (definition, config) => {\n    const mermaidConfig = config || {};\n    const fontSize = parseInt(mermaidConfig.themeVariables?.fontSize ?? \"\") || DEFAULT_FONT_SIZE;\n    const parsedMermaidData = await parseMermaid(definition, {\n        ...mermaidConfig,\n        themeVariables: {\n            ...mermaidConfig.themeVariables,\n            // Multiplying by 1.25 to increase the font size by 25% and render correctly in Excalidraw\n            fontSize: `${fontSize * 1.25}px`,\n        },\n    });\n    // Only font size supported for excalidraw elements\n    const excalidrawElements = graphToExcalidraw(parsedMermaidData, {\n        fontSize,\n    });\n    return excalidrawElements;\n};\nexport { parseMermaidToExcalidraw };\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,MAAM,2BAA2B,OAAO,YAAY;IAChD,MAAM,gBAAgB,UAAU,CAAC;IACjC,MAAM,WAAW,SAAS,cAAc,cAAc,EAAE,YAAY,OAAO,mLAAA,CAAA,oBAAiB;IAC5F,MAAM,oBAAoB,MAAM,CAAA,GAAA,sLAAA,CAAA,eAAY,AAAD,EAAE,YAAY;QACrD,GAAG,aAAa;QAChB,gBAAgB;YACZ,GAAG,cAAc,cAAc;YAC/B,0FAA0F;YAC1F,UAAU,GAAG,WAAW,KAAK,EAAE,CAAC;QACpC;IACJ;IACA,mDAAmD;IACnD,MAAM,qBAAqB,CAAA,GAAA,2LAAA,CAAA,oBAAiB,AAAD,EAAE,mBAAmB;QAC5D;IACJ;IACA,OAAO;AACX","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2726, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2731, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/markdown-to-text/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.removeMarkdown = void 0;\n/**\n * @function removeMarkdown\n *\n * @description\n * Parse the markdown and returns a string\n *\n * @param markdown - The markdown string to parse\n * @param options - The options for the function\n *\n * @returns The parsed plain text\n */\nvar removeMarkdown = function (markdown, options) {\n    if (options === void 0) { options = {\n        listUnicodeChar: \"\",\n    }; }\n    options = options || {};\n    options.listUnicodeChar = options.hasOwnProperty(\"listUnicodeChar\")\n        ? options.listUnicodeChar\n        : false;\n    options.stripListLeaders = options.hasOwnProperty(\"stripListLeaders\")\n        ? options.stripListLeaders\n        : true;\n    options.gfm = options.hasOwnProperty(\"gfm\") ? options.gfm : true;\n    options.useImgAltText = options.hasOwnProperty(\"useImgAltText\")\n        ? options.useImgAltText\n        : true;\n    options.preserveLinks = options.hasOwnProperty(\"preserveLinks\")\n        ? options.preserveLinks\n        : false;\n    var output = markdown || \"\";\n    // Remove horizontal rules (stripListHeaders conflict with this rule, which is why it has been moved to the top)\n    output = output.replace(/^(-\\s*?|\\*\\s*?|_\\s*?){3,}\\s*$/gm, \"\");\n    try {\n        if (options.stripListLeaders) {\n            if (options.listUnicodeChar)\n                output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, options.listUnicodeChar + \" $1\");\n            else\n                output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, \"$1\");\n        }\n        if (options.gfm) {\n            output = output\n                // Header\n                .replace(/\\n={2,}/g, \"\\n\")\n                // Fenced codeblocks\n                .replace(/~{3}.*\\n/g, \"\")\n                // Strikethrough\n                .replace(/~~/g, \"\")\n                // Fenced codeblocks\n                .replace(/`{3}.*\\n/g, \"\");\n        }\n        if (options.preserveLinks) {\n            // Remove inline links while preserving the links\n            output = output.replace(/\\[(.*?)\\][\\[\\(](.*?)[\\]\\)]/g, \"$1 ($2)\");\n        }\n        output = output\n            // Remove HTML tags\n            .replace(/<[^>]*>/g, \"\")\n            // Remove setext-style headers\n            .replace(/^[=\\-]{2,}\\s*$/g, \"\")\n            // Remove footnotes?\n            .replace(/\\[\\^.+?\\](\\: .*?$)?/g, \"\")\n            .replace(/\\s{0,2}\\[.*?\\]: .*?$/g, \"\")\n            // Remove images\n            .replace(/\\!\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, options.useImgAltText ? \"$1\" : \"\")\n            // Remove inline links\n            .replace(/\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, \"$1\")\n            // Remove blockquotes\n            .replace(/^\\s{0,3}>\\s?/g, \"\")\n            .replace(/(^|\\n)\\s{0,3}>\\s?/g, \"\\n\\n\")\n            // Remove reference-style links?\n            .replace(/^\\s{1,2}\\[(.*?)\\]: (\\S+)( \".*?\")?\\s*$/g, \"\")\n            // Remove atx-style headers\n            .replace(/^(\\n)?\\s{0,}#{1,6}\\s+| {0,}(\\n)?\\s{0,}#{0,} {0,}(\\n)?\\s{0,}$/gm, \"$1$2$3\")\n            // Remove emphasis (repeat the line to remove double emphasis)\n            .replace(/([\\*_]{1,3})(\\S.*?\\S{0,1})\\1/g, \"$2\")\n            .replace(/([\\*_]{1,3})(\\S.*?\\S{0,1})\\1/g, \"$2\")\n            // Remove code blocks\n            .replace(/(`{3,})(.*?)\\1/gm, \"$2\")\n            // Remove inline code\n            .replace(/`(.+?)`/g, \"$1\")\n            // Replace two or more newlines with exactly two? Not entirely sure this belongs here...\n            .replace(/\\n{2,}/g, \"\\n\\n\");\n    }\n    catch (e) {\n        console.error(e);\n        return markdown;\n    }\n    return output;\n};\nexports.removeMarkdown = removeMarkdown;\n"],"names":[],"mappings":"AAAA;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,cAAc,GAAG,KAAK;AAC9B;;;;;;;;;;CAUC,GACD,IAAI,iBAAiB,SAAU,QAAQ,EAAE,OAAO;IAC5C,IAAI,YAAY,KAAK,GAAG;QAAE,UAAU;YAChC,iBAAiB;QACrB;IAAG;IACH,UAAU,WAAW,CAAC;IACtB,QAAQ,eAAe,GAAG,QAAQ,cAAc,CAAC,qBAC3C,QAAQ,eAAe,GACvB;IACN,QAAQ,gBAAgB,GAAG,QAAQ,cAAc,CAAC,sBAC5C,QAAQ,gBAAgB,GACxB;IACN,QAAQ,GAAG,GAAG,QAAQ,cAAc,CAAC,SAAS,QAAQ,GAAG,GAAG;IAC5D,QAAQ,aAAa,GAAG,QAAQ,cAAc,CAAC,mBACzC,QAAQ,aAAa,GACrB;IACN,QAAQ,aAAa,GAAG,QAAQ,cAAc,CAAC,mBACzC,QAAQ,aAAa,GACrB;IACN,IAAI,SAAS,YAAY;IACzB,gHAAgH;IAChH,SAAS,OAAO,OAAO,CAAC,mCAAmC;IAC3D,IAAI;QACA,IAAI,QAAQ,gBAAgB,EAAE;YAC1B,IAAI,QAAQ,eAAe,EACvB,SAAS,OAAO,OAAO,CAAC,mCAAmC,QAAQ,eAAe,GAAG;iBAErF,SAAS,OAAO,OAAO,CAAC,mCAAmC;QACnE;QACA,IAAI,QAAQ,GAAG,EAAE;YACb,SAAS,MACL,SAAS;aACR,OAAO,CAAC,YAAY,KACrB,oBAAoB;aACnB,OAAO,CAAC,aAAa,GACtB,gBAAgB;aACf,OAAO,CAAC,OAAO,GAChB,oBAAoB;aACnB,OAAO,CAAC,aAAa;QAC9B;QACA,IAAI,QAAQ,aAAa,EAAE;YACvB,iDAAiD;YACjD,SAAS,OAAO,OAAO,CAAC,+BAA+B;QAC3D;QACA,SAAS,MACL,mBAAmB;SAClB,OAAO,CAAC,YAAY,GACrB,8BAA8B;SAC7B,OAAO,CAAC,mBAAmB,GAC5B,oBAAoB;SACnB,OAAO,CAAC,wBAAwB,IAChC,OAAO,CAAC,yBAAyB,GAClC,gBAAgB;SACf,OAAO,CAAC,+BAA+B,QAAQ,aAAa,GAAG,OAAO,GACvE,sBAAsB;SACrB,OAAO,CAAC,6BAA6B,KACtC,qBAAqB;SACpB,OAAO,CAAC,iBAAiB,IACzB,OAAO,CAAC,sBAAsB,OAC/B,gCAAgC;SAC/B,OAAO,CAAC,0CAA0C,GACnD,2BAA2B;SAC1B,OAAO,CAAC,kEAAkE,SAC3E,8DAA8D;SAC7D,OAAO,CAAC,iCAAiC,MACzC,OAAO,CAAC,iCAAiC,KAC1C,qBAAqB;SACpB,OAAO,CAAC,oBAAoB,KAC7B,qBAAqB;SACpB,OAAO,CAAC,YAAY,KACrB,wFAAwF;SACvF,OAAO,CAAC,WAAW;IAC5B,EACA,OAAO,GAAG;QACN,QAAQ,KAAK,CAAC;QACd,OAAO;IACX;IACA,OAAO;AACX;AACA,QAAQ,cAAc,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2797, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2803, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Alejandro/Desktop/BalloonTec/strive/node_modules/%40excalidraw/mermaid-to-excalidraw/node_modules/nanoid/index.browser.js"],"sourcesContent":["export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":[],"mappings":";;;;;;;AACO,IAAI,SAAS,CAAA,QAAS,OAAO,eAAe,CAAC,IAAI,WAAW;AAC5D,IAAI,eAAe,CAAC,UAAU,aAAa;IAChD,IAAI,OAAO,CAAC,KAAM,KAAK,GAAG,CAAC,SAAS,MAAM,GAAG,KAAK,KAAK,GAAG,AAAC,IAAI;IAC/D,IAAI,OAAO,CAAC,CAAC,CAAC,AAAC,MAAM,OAAO,cAAe,SAAS,MAAM;IAC1D,OAAO,CAAC,OAAO,WAAW;QACxB,IAAI,KAAK;QACT,MAAO,KAAM;YACX,IAAI,QAAQ,UAAU;YACtB,IAAI,IAAI;YACR,MAAO,IAAK;gBACV,MAAM,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,KAAK,IAAI;gBACnC,IAAI,GAAG,MAAM,KAAK,MAAM,OAAO;YACjC;QACF;IACF;AACF;AACO,IAAI,iBAAiB,CAAC,UAAU,OAAO,EAAE,GAC9C,aAAa,UAAU,MAAM;AACxB,IAAI,SAAS,CAAC,OAAO,EAAE,GAC5B,OAAO,eAAe,CAAC,IAAI,WAAW,OAAO,MAAM,CAAC,CAAC,IAAI;QACvD,QAAQ;QACR,IAAI,OAAO,IAAI;YACb,MAAM,KAAK,QAAQ,CAAC;QACtB,OAAO,IAAI,OAAO,IAAI;YACpB,MAAM,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,IAAI,WAAW;QAC5C,OAAO,IAAI,OAAO,IAAI;YACpB,MAAM;QACR,OAAO;YACL,MAAM;QACR;QACA,OAAO;IACT,GAAG","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 2840, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}